[module classes('http://www.obeonetwork.org/dsl/soa/4.0.0', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::names/]
[import fr::pacman::commons::convention::rule::classRule/]

[comment encoding = UTF-8 /]
[query public buildAttributesEnumName(d : environment::DTO) : String = (d.buildSimpleDtoName() + ' attributes').apply_classEnum()/]

[query public buildXtoTestClassName(d : environment::DTO) : String = (d.buildSimpleDtoName() + ' xto').apply_classTest()/]

[query public buildRSServicesFacadeFactoryClassName(any : ecore::EObject) : String = (any.getApplicationName() + ' services facade factory').apply_classDefault()/]

[query public buildServiceFacadeRSClassName(s : soa::Service, d : environment::DTO) : String = if not (s = null) then (s.buildSimpleServiceName() + ' service RS facade').apply_classImplem() else (d.buildSimpleDtoName() + ' CRUD service RS facade').apply_classImplem() endif/]

[query public buildServiceFacadeRSInterfaceName(s : soa::Service, d : environment::DTO) : String = if not (s = null) then (s.buildSimpleServiceName() + ' service RS facade').apply_classInterface() else (d.buildSimpleDtoName() + ' CRUD service RS facade').apply_classInterface() endif/]

[query public buildRSResourceClassName(s : soa::Service, d : environment::DTO) : String = if not (s = null) then (s.name + ' resources').apply_classDefault() else (d.buildSimpleDtoName() + ' CRUD resources').apply_classDefault() endif/]

[query public buildRSResourceTestClassName(s : soa::Service, d : environment::DTO) : String = if not (s = null) then (s.name + ' resources').apply_classTest() else (d.buildSimpleDtoName() + ' resources').apply_classTest() endif/]