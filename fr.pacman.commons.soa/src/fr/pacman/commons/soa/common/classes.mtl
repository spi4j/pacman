[comment encoding = UTF-8 /]
[module classes('http://www.obeonetwork.org/dsl/soa/4.0.0',
                'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::names /]
[import fr::pacman::commons::convention::rule::classRule /]


[query public buildAttributesEnumName(d : DTO) : String =
	apply_classEnum(buildSimpleDtoName(d) + ' attributes')
 /]

[query public buildXtoTestClassName(d : DTO) : String =
	apply_classTest(buildSimpleDtoName(d) + ' xto')
 /]

[query public buildBatchClassName(s : Service) : String = 
	apply_classDefault(s.name.replaceAll('(?i)batch','') + ' batch') 
/]

[query public buildRSServicesFacadeFactoryClassName(any : OclAny) : String =
	apply_classDefault(getApplicationName() + ' services facade factory')
 /]

[query public buildServiceFacadeRSClassName(s : Service, d : DTO) : String =
	if not s.oclIsUndefined() then apply_classImplem(s.buildSimpleServiceName() + ' service RS facade')
	else apply_classImplem(d.buildSimpleDtoName() + ' CRUD service RS facade') endif
 /]

[query public buildServiceFacadeRSInterfaceName(s : Service, d : DTO) : String = 
	if not s.oclIsUndefined() then apply_classInterface(s.buildSimpleServiceName() + ' service RS facade') 
    else d.apply_classInterface(d.buildSimpleDtoName() + ' CRUD service RS facade') endif
 /]

[query public buildRSResourceClassName(s : Service, d : DTO) : String =
	if not s.oclIsUndefined() then  apply_classDefault(s.name + ' resources')
	else d.apply_classDefault(d.buildSimpleDtoName() + ' CRUD resources') endif 
 /]

[query public buildRSResourceTestClassName(s : Service, d : DTO) : String = 
	if not s.oclIsUndefined() then  apply_classTest(s.name + ' resources')
	else d.apply_classTest(d.buildSimpleDtoName() + ' resources') endif 
 /]