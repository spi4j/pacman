# Le nom d'une variable multiple par defaut
variableMultipleDefault = v_{$listPrefix}_[CamelCase.LowerFirst/]
# Le nom du package de persistence
packagePersistence = persistence
# Le nom du package d'api
packageApi = api
# Le nom du package pour la montee en charge
packageOverload = overload
# Le nom du package d'implementation server
packageImplemServer = impl_server
# Le nom du package de matching
packageMatching = matching
# Le nom du package de requirement
packageRequirement = requirement
# Le nom du package pour les composants PGE Swing
packagePgeSwing = client.ui.swing.widgets
# La norme a appliquer pour une page web par defaut
pageDefault = [trimLowerAll/]
# Le nom d'une methode reset
methodReset = reset_[CamelCaseIgnoreFirst/]
# Le nom d'un attribut par défaut
attributeDefault = _[CamelCaseIgnoreFirst/]
# Le nom d'un attribut d'enumeration
attributeEnum = [CamelCaseIgnoreFirst/]
# Le nom d'attribut dans une affectation dans le constructeur
attributeAffectation = this.{$attributeDefault}
# Le nom d'un attribut static
attributeStatic = [CamelCaseIgnoreFirst/]
# Le nom d'un attribut final static
attributeFinalStatic = c_[CamelCaseIgnoreFirst/]
# Le nom d'un parametre Multiple
parameterMethodMultipleMap = p_{$mapPrefix}_[CamelCase.LowerFirst/]
# Le nom d'un parametre IN objet
parameterMethodObjectIn = p_[CamelCase.UpperFirst/]
# Le nom d'un parametre OUT classique
parameterMethodClassicOut = p_[CamelCase.LowerFirst/]
# Le nom d'un parametre OUT objet
parameterMethodObjectOut = p_[CamelCase.UpperFirst/]
# Le nom d'un parametre IN/OUT objet
parameterMethodObjectInOut = p_[CamelCase.UpperFirst/]
# Le nom d'un parametre du methode reset
parameterMethodReset = p_[CamelCase.LowerFirst/]
# Le nom d'un parametre d'un setter
parameterMethodSetter = p_[CamelCase.LowerFirst/]
# La norme a appliquer pour une classe par defaut
classDefault = [CamelCase/]
# La norme a appliquer pour une annotation Java
classAnnotation = [CamelCase/]
# La norme a appliquer pour une classe abstraite
classAbstract = [CamelCase/]_Abs
# La norme a appliquer pour une interface
classInterface = [CamelCase/]_Itf
# La norme a appliquer pour une classe d'implementation
classImplem = [CamelCase/]
# La norme a appliquer pour une enumeration
classEnum = [CamelCase/]_Enum
# La norme a appliquer pour une classe de test
classTest = [CamelCase/]_Test
# Le prefixe des listes
listPrefix = tab
# Le prefixe des map
mapPrefix = map
# Prefix des attributs lors d'une affectation (this. ou rien)
affectationPrefix = 
# Le nom d'une variable final
variableFinal = v_[CamelCaseIgnoreFirst/]
# Le nom d'une variable par defaut
variableDefault = v_[CamelCaseIgnoreFirst/]
# Le nom d'une variable multiple (map) par defaut
variableMultipleMap = v_{$mapPrefix}_[CamelCase.LowerFirst/]
# Le nom d'une variable objet final
variableObjectFinal = v_[CamelCase/]
# Le nom du package d'implementation jdbc
packageImplemJdbc = impl_jdbc
# Le nom du package pour l import de referentiel
packageReferentiel = dbreferentiel
# Le nom du package du business
packageBusiness = business
# Le nom du package pour les composants PGE GWT
packagePgeGwt = client.ui.gwt.widgets
# Le nom d'une methode par defaut
methodDefault = [CamelCase.LowerFirst/]
# Le nom d'une methode multiple
methodMultiple = [LanguageC/]
# Le nom d'une methode get
methodGet = get_[CamelCaseIgnoreFirst/]
# Le nom d'une methode set
methodSet = set_[CamelCaseIgnoreFirst/]
# Le nom d'un attribut multiple
attributeMultiple = _{$listPrefix}_[CamelCase.LowerFirst/]
# Le nom d'un attribut final
attributeFinal = {$attributeDefault}
# Le nom d'un parametre IN classic
parameterMethodClassicIn = p_[CamelCase.LowerFirst/]
# Le nom d'un parametre Multiple
parameterMethodMultiple = p_{$listPrefix}_[CamelCase.LowerFirst/]
# Le nom d'un parametre IN/OUT classique
parameterMethodClassicInOut = p_[CamelCase.LowerFirst/]
# Le nom d'une variable par objet defaut
variableObjectDefault = v_[CamelCase/]
