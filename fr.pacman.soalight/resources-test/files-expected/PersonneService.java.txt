package fr.appwhite2.business.impl_server.annuaire;

// Start of user code for imports

import java.util.List;

import fr.appwhite2.business.api.annuaire.PersonneService_Itf;
import fr.appwhite2.persistence.Appli1ParamPersistence;
import fr.appwhite2.persistence.Appli1UserPersistence;
import fr.appwhite2.persistence.api.annuaire.CompetenceEntity_Itf;
import fr.appwhite2.persistence.api.annuaire.PersonneColumns_Enum;
import fr.appwhite2.persistence.api.annuaire.PersonneDao_Itf;
import fr.appwhite2.persistence.api.annuaire.PersonneEntity_Itf;
import fr.appwhite2.requirement.Requirement;
import fr.appwhite2.requirement.Requirement_Enum;
import fr.referentiel.persistence.api.ref.GradeEntity_Itf;
import fr.spi4j.entity.Service_Abs;
// End of user code

/**
 * Implémentation du contrat de services spécifiques pour un type 'Personne'. <br/>
 * Pour rappel, les services sont sans état.
 * @author MINARM
 */
// Start of user code Annotations Service
@javax.ejb.Stateless
// End of user code
public class PersonneService extends Service_Abs<Long, PersonneEntity_Itf, PersonneColumns_Enum> implements PersonneService_Itf
{

   // Rappel : les services sont sans état.
   // Start of user code attributs

   // End of user code

   @SuppressWarnings("all")
   private final PersonneServiceRequirements _requirements = new PersonneServiceRequirements(); // NOPMD

   /**
    * Obtenir l'instance de dao sur le type 'Personne'.
    * @return L'instance désirée.
    */
   @Override
   protected PersonneDao_Itf getDao ()
   {
      final Appli1UserPersistence v_userPersistence = Appli1ParamPersistence.getUserPersistence();
      return v_userPersistence.getPersonneDao();
   }

   @Override
   public List<CompetenceEntity_Itf> findListCompetencesByPersonne (final Long p_personne_id)
   {
      return getDao().findListCompetenceByPersonne(p_personne_id);
   }

   @Requirement(value =
   {Requirement_Enum.REQ_FCT_PERS_01, Requirement_Enum.REQ_TEC_PERS_02 })
   // Start of user code findListPersonneByGrade_Grade_Personne
   @Override
   public List<PersonneEntity_Itf> findListPersonneByGrade (final GradeEntity_Itf p_grade)
   {        
      final List<PersonneEntity_Itf> v_personnes = findByColumn(PersonneColumns_Enum.grade_id, p_grade.getId());      
      _requirements.exigenceREQ_FCT_PERS_01(v_personnes, p_grade.getId());
      return v_personnes;
   }

   @Requirement(value =
         {Requirement_Enum.REQ_FCT_PERS_01, Requirement_Enum.REQ_TEC_PERS_02 })
         // Start of user code findListPersonneByGrade_Grade_Personne
         @Override
         public List<PersonneEntity_Itf> findListPersonneByGrade (final Long p_grade)
         {      
            final List<PersonneEntity_Itf> v_personnes = findByColumn(PersonneColumns_Enum.grade_id, p_grade);
            _requirements.exigenceREQ_FCT_PERS_01(v_personnes, p_grade);
            return v_personnes;
         }

         
   // End of user code

   // Start of user code findAllFetchAdresses_Personne
   @Override
   public List<PersonneEntity_Itf> findAllFetchAdresses ()
   {
      final List<PersonneEntity_Itf> v_personnes = findAll();
      return v_personnes;
   }

   // End of user code

   // Start of user code PersonneService

   // exemple de service spécifique ajouté manuellement par un développeur après génération

   @Override
   public void deleteCascade (final PersonneEntity_Itf p_Personne)
   {
      // Obtenir l'instance de Matching de la personne      
      // Délèguer le deleteCascade au entity
      getDao().deleteCascade(p_Personne);
   }
  
   
   // End of user code
}
