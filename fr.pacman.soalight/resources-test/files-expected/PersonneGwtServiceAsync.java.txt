package fr.appwhite2.client.business.annuaire;

// Start of user code for imports

import java.util.List;

import com.google.gwt.user.client.rpc.AsyncCallback;

import fr.appwhite2.ws.api.annuaire.CompetenceXto;
import fr.appwhite2.ws.api.annuaire.PersonneXto;
import fr.referentiel.ws.api.ref.GradeXto;
import fr.spi4j.ui.gwt.client.services.GwtRemoteServiceAsync;

// End of user code

/**
 * Interface de services appelables par le client.
 * @author MINARM
 */
public interface PersonneGwtServiceAsync extends GwtRemoteServiceAsync<Long, PersonneXto>
{

   /**
    * Obtenir la liste d'objets de type 'Competence' associés à l'instance de type 'Personne'.
    * @param p_personne_id
    *           (In)(*) Personne.
    * @param callback
    *           le callback pour retourner une liste de CompetenceXto
    */
   void findListCompetencesByPersonne (final Long p_personne_id, final AsyncCallback<List<CompetenceXto>> callback);

   // Start of user code findListPersonneByGrade_Grade_Personne

   /**
    * Recherche la liste des personnes par grade.
    * @param p_grade
    *           (In)(*) le grade recherché.
    * @param callback
    *           (Out) le callback pour retourner la liste des personnes qui ont ce grade.
    */
   void findListPersonneByGrade (final GradeXto p_grade, final AsyncCallback<List<PersonneXto>> callback);

   // End of user code

   // Start of user code findAllFetchAdresses_Personne

   /**
    * Recherche toutes les personnes, avec leurs adresses préchargées.
    * @param callback
    *           (Out) le callback pour retourner toutes les personnes avec leurs adresses.
    */
   void findAllFetchAdresses (final AsyncCallback<List<PersonneXto>> callback);

   // End of user code

   // Start of user code PersonneGwtServiceAsync

   /**
    * Effacer la personne avec tous les éléments connexes (adresses de la personne).
    * @param p_Personne
    *           (In)(*) La personne à effacer (obligatoire).
    * @param callback
    *           le callback
    */
   void deleteCascade (PersonneXto p_Personne, AsyncCallback<Void> callback);

   // End of user code
}
