package fr.appwhite2.ws.api.annuaire;

// Start of user code for imports

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

import fr.referentiel.ws.api.ref.GradeXto;
import fr.spi4j.ws.xto.Xto_Itf;

// End of user code

/**
 * Implémentation XTO pour le type 'Personne'.
 * @author MINARM
 */
@XmlRootElement(name = "PersonneXto", namespace = "http://annuaire.appwhite2.fr/xto")
@XmlAccessorType(XmlAccessType.FIELD)
public class PersonneXto implements Xto_Itf<Long>
{

   private static final long serialVersionUID = 1L;

   // ATTRIBUTS

   /** L'identifiant. */
   @XmlElement(namespace = "", name = "id")
   private Long _Personne_id;

   /** le nom de la personne. */
   @XmlElement(namespace = "", name = "nom")
   private String _nom;

   /** le prénom de la personne. */
   @XmlElement(namespace = "", name = "prenom")
   private String _prenom;

   /** . */
   @XmlElement(namespace = "", name = "civil")
   private Boolean _civil;

   /** . */
   @XmlElement(namespace = "", name = "dateNaissance")
   private Date _dateNaissance;

   /** Le salaire de la personne. */
   @XmlElement(namespace = "", name = "salaire")
   private Double _salaire;

   /** La FK sur le Type 'Grade'. */
   @XmlElement(namespace = "", name = "grade_id")
   private Long _grade_id;

   /** L'instance de 'Grade' associee a  l'instance de 'Personne' courante. */
   @XmlElement(namespace = "", name = "grade")
   private GradeXto _grade;

   /** La liste de type 'Competence' associee a  l'instance de 'Personne' courante. */
   @XmlElement(namespace = "", name = "_tab_competences")
   private List<CompetenceXto> _tab_competences;

   /** La liste de type 'Adresse' associee a  l'instance de 'Personne' courante. */
   @XmlElement(namespace = "", name = "_tab_adresses")
   private List<AdresseXto> _tab_adresses;

   /** La valeur de la version. */
   @SuppressWarnings("all")
   @XmlTransient
   private Serializable _version;

   // METHODES

   @Override
   public Long getId ()
   {
      return _Personne_id;
   }

   @Override
   public void setId (final Long p_id)
   {
      _Personne_id = p_id;
   }

   /**
    * Obtenir le nom de la personne.
    * @return le nom de la personne.
    */
   public String get_nom ()
   {
      return _nom;
   }

   /**
    * Affecter le nom de la personne.
    * @param p_nom
    *           (In)(*) le nom de la personne.
    */
   public void set_nom (final String p_nom)
   {
      _nom = p_nom;
   }

   /**
    * Obtenir le prénom de la personne.
    * @return le prénom de la personne.
    */
   public String get_prenom ()
   {
      return _prenom;
   }

   /**
    * Affecter le prénom de la personne.
    * @param p_prenom
    *           (In) le prénom de la personne.
    */
   public void set_prenom (final String p_prenom)
   {
      _prenom = p_prenom;
   }

   /**
    * Obtenir civil.
    * @return civil.
    */
   public Boolean get_civil ()
   {
      return _civil;
   }

   /**
    * Affecter civil.
    * @param p_civil
    *           (In)(*) civil.
    */
   public void set_civil (final Boolean p_civil)
   {
      _civil = p_civil;
   }

   /**
    * Obtenir dateNaissance.
    * @return dateNaissance.
    */
   public Date get_dateNaissance ()
   {
      return _dateNaissance;
   }

   /**
    * Affecter dateNaissance.
    * @param p_dateNaissance
    *           (In) dateNaissance.
    */
   public void set_dateNaissance (final Date p_dateNaissance)
   {
      _dateNaissance = p_dateNaissance;
   }

   /**
    * Obtenir le salaire de la personne.
    * @return Le salaire de la personne.
    */
   public Double get_salaire ()
   {
      return _salaire;
   }

   /**
    * Affecter le salaire de la personne.
    * @param p_salaire
    *           (In) Le salaire de la personne.
    */
   public void set_salaire (final Double p_salaire)
   {
      _salaire = p_salaire;
   }

   /**
    * Obtenir grade.
    * @return grade.
    */
   public Long get_grade_id ()
   {
      if (_grade != null)
      {
         _grade_id = _grade.getId();
      }
      return _grade_id;
   }

   /**
    * Affecter grade.
    * @param p_grade_id
    *           (In) grade.
    */
   public void set_grade_id (final Long p_grade_id)
   {
      _grade_id = p_grade_id;
      _grade = null;
   }

   /**
    * Obtenir l'instance de 'Grade' associee a  l'instance de 'Personne' courante.
    * @return L'instance desiree.
    */
   public GradeXto get_grade ()
   {
      return _grade;
   }

   /**
    * Affecter grade de personne.
    * @param p_grade
    *           (In) grade.
    */
   public void set_grade (final GradeXto p_grade)
   {
      if (p_grade == null)
      {
         set_grade_id(null);
      }
      else
      {
         set_grade_id(p_grade.getId());
      }
      _grade = p_grade;
   }

   /**
    * Obtenir la liste de type 'Competence' associee à  l'instance de 'Personne' courante.
    * @return La liste desiree.
    */
   public List<CompetenceXto> get_tab_competences ()
   {
      return _tab_competences;
   }

   /**
    * Affecter les Competence de personne.
    * @param p_tab_competence
    *           (In) Competences.
    */
   public void set_tab_competences (final List<CompetenceXto> p_tab_competence)
   {
      _tab_competences = p_tab_competence;
   }

   /**
    * Obtenir la liste de type 'Adresse' associee à  l'instance de 'Personne' courante.
    * @return La liste desiree.
    */
   public List<AdresseXto> get_tab_adresses ()
   {
      return _tab_adresses;
   }

   /**
    * Affecter les Adresse de personne.
    * @param p_tab_adresse
    *           (In)(*) adresses.
    */
   public void set_tab_adresses (final List<AdresseXto> p_tab_adresse)
   {
      _tab_adresses = p_tab_adresse;
   }

   @Override
   public String toString ()
   {
      // Start of user code toString

      // toString modifié manuellement pour afficher le libellé dans l'IHM GWT
      if (get_prenom() == null)
      {
         return String.valueOf(get_nom());
      }
      else
      {
         return String.valueOf(get_nom()) + ' ' + get_prenom();
      }

      // End of user code
   }
}
