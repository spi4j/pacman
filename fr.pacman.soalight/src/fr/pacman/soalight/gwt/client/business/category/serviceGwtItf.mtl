[module serviceGwtItf('http://www.obeonetwork.org/dsl/soa/4.0.0', 'http://www.obeonetwork.org/dsl/environment/3.0.0', 'http://www.obeonetwork.org/dsl/entity/3.0.0', 'http://www.obeonetwork.org/dsl/entity/2.0.0/utilities')/]

[import fr::pacman::commons::common::licence/]
[import fr::pacman::commons::common::attributes/]
[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::names/]
[import fr::pacman::commons::common::imports/]
[import fr::pacman::soalight::common::outils/]
[import fr::pacman::soalight::common::imports/]
[import fr::pacman::soalight::common::packages/]
[import fr::pacman::soalight::common::name/]
[import fr::pacman::soalight::common::commentaires/]
[import fr::pacman::soalight::common::attributes/]
[import fr::pacman::soalight::common::methodes/]
[import fr::pacman::soalight::common::classes/]
[import fr::pacman::commons::convention::rule::parameterRule/]
[import fr::pacman::commons::convention::rule::attributeRule/]
[import fr::pacman::commons::convention::rule::methodRule/]

[comment encoding = UTF-8 /]
[comment le Service existe sans Entity /]
[template public serviceGwtItf(s : soa::Service)]
  [s.licence()/]
  [let self = if not (s = null) then s else 'PACKAGE NOT FOUND FOR SERVICE' endif]
    package [s.buildPackageBusinessGwtClientService()/];
    
    [protected ('for imports') startTagPrefix('// ') endTagPrefix('// ')]
      
      import java.util.List;
      import java.util.Date;
      
      import com.google.gwt.user.client.rpc.RemoteServiceRelativePath;
      
      
      import com.google.gwt.user.client.rpc.RemoteService;
      
    [/protected]
    
    
    /**
     * Interface de services appelables par le client.
     * @author [s.getAuthorName()/]
     */
    @RemoteServiceRelativePath("../[s.getApplicationName()/]/[s.buildServiceName()/]")
    public interface [s.buildServiceGwtInterfaceName()/] extends RemoteService
    {
    
    [if (s <> null and not (s.ownedInterface = null))]
      [for (o : soa::Operation | s.ownedInterface.ownedOperations)]
           // [o.userCodeForOperation()/]
           [protected (o.getUserCodeId(o.userCodeForOperation())) startTagPrefix('// ') endTagPrefix('// ')]
             
                /**
                 * [o.description/].
             [o.getComParamsIn()/][o.comParamOut()/]    */
                [o.paramOutXto()/] [o.name.apply_methodDefault()/] ([o.paramsInXto()/]);
             
           [/protected]
        
        
      [/for]
    [/if]
       // [s.nameServiceInterfaceGwt()/]
       [protected (s.getUserCodeId(s.nameServiceInterfaceGwt())) startTagPrefix('// ') endTagPrefix('// ')]
         
       [/protected]
    
    }[/let]
[/template]