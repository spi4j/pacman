[comment encoding = UTF-8 /]
[module generateCommonSoaLight('http://www.obeonetwork.org/dsl/environment/3.0.0',
                          'http://www.obeonetwork.org/dsl/soa/4.0.0',
						  'http://www.obeonetwork.org/dsl/entity/3.0.0')/]

[import fr::pacman::commons::common::properties /]
[import fr::pacman::commons::soa::common::services /]
[import fr::pacman::soalight::common::outils /]
[import fr::pacman::soalight::files::genServiceItf/]
[import fr::pacman::soalight::files::genServiceCXFItf /]
[import fr::pacman::soalight::files::genServiceRSItf /]
[import fr::pacman::soalight::files::genUserBusiness /]
[import fr::pacman::soalight::files::genPermissionsItf /]
[import fr::pacman::soalight::files::genLog4j /]

[template public GenerateCommonSystemLight(n : Namespace)]
[comment @main /]
 	[if (useLog4J())]
        [n.genLog4j('commons')/]
    [/if]
    [if ( listeServicesFromSystemSearchable(n) = true )]
    [genUserBusiness(n)/]
    [genPermissionsItf(n)/]
    [/if]
[comment : Selon le client (GWT par exemple), on peut avoir besoin de générer tous les XTO, pas seulement ceux liés au WebServices /]
    [comment : agglomération des mains /]
    [for (service : Service | n.eAllContents(Service))]
        [if service.serviceSeul()  and ( not service.isFromEntityService()) ]
            [genServiceItf(service)/]
      	[/if]
		[if service.hasCXFOperations()]
            [genServiceCXFItf(service)/]
        [/if]
		[if service.hasRSOperations()]
			[genServiceRSItf(service)/]
		[/if]
    [/for]


[/template]

[template public GenerateCommonComponentLight(component : Component)]
[comment @main /]

	[for (service : Service | component.eAllContents(Service))]
        [genServiceItf(service)/]
		[if service.hasCXFOperations()]
            [genServiceCXFItf(service)/]
        [/if]
		[if service.hasRSOperations()]
			[genServiceRSItf(service)/]
		[/if]
    [/for]
[/template]

[template public GenerateCommonServiceLight(service : Service)]
[comment @main /]
     	[genServiceItf(service)/]
		[if service.hasCXFOperations()]
            [genServiceCXFItf(service)/]
        [/if]
		[if service.hasRSOperations()]
			[genServiceRSItf(service)/]
		[/if]
[/template]

