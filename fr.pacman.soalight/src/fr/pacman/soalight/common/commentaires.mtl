[module commentaires('http://www.obeonetwork.org/dsl/soa/4.0.0', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::utils/]
[import fr::pacman::soalight::common::name/]
[import fr::pacman::soalight::common::classes/]
[import fr::pacman::commons::convention::rule::parameterRule/]
[import fr::pacman::commons::common::names/]

[comment encoding = UTF-8 /]
[**
 * Paramétrage PacMan
*/]
[template public getComParamIn(p : environment::Property)]
      * @param [p.name.normalize().apply_parameterMethodClassicIn()/]
      *           (In)[if (p.isMandatory())](*)[/if]
   [p.description(false)/][/template]

[template public getComParamsIn(o : soa::Operation)]
  [for (p : soa::Parameter | o.input)]
        * @param [p.name.normalize().apply_parameterMethodClassicIn()/]
        *           (In)[if (p.isMandatory())](*)[/if]
     [p.description(false)/]
  [/for]
[/template]

[**
 * Fin Paramétrage
*/]
[comment r : Rôle succinct (sur une ligne) /]
[template public comClass(r : String, d : environment::DTO)]
  /**
   * [r/].
   * @author [r.getAuthorName()/]
   */[/template]

[template public comClass(r : String)]
  /**
   * [r/].
   * @author [r.getAuthorName()/]
   */[/template]

[template public comParamIn(p : environment::Property)]
      * @param [p.nameParam().apply_parameterMethodClassicIn()/]
      *           (In)[if (p.isMandatory())](*)[/if]
   [p.description(false)/][/template]

[template public comParamOut(p : environment::Property)]
      * @param [p.nameParam().apply_parameterMethodClassicIn()/]
      *           (Out)[if (p.isMandatory())](*)[/if]
   [p.description(false)/][/template]

[template public comReturn(p : environment::Property)]
      * @return [p.description(false)/][/template]

[template public comPrefix(p : environment::Property, s : String)]
      * [s/] [p.description(true)/][/template]

[template private description(p : environment::Property, lowerFirst : Boolean)]
  [if (p.description = null)][p.name/].[else]
                                         [if (lowerFirst)][p.description.toLowerFirst()/][else][p.description/][/if]
                                         .[/if]
[/template]

[template private description(p : soa::Parameter, lowerFirst : Boolean)]
  [if (p.description = null)][p.name/].[else]
                                         [if (lowerFirst)][p.description.toLowerFirst()/][else][p.description/][/if]
                                         .[/if]
[/template]

[template public comParamsIn(o : soa::Operation)]
  [for (p : soa::Parameter | o.input)]
        * @param [p.nameParam().apply_parameterMethodClassicIn()/]
        *           (In)[if (p.isMandatory())](*)[/if]
     [p.description(false)/]
  [/for]
[/template]

[template public comParamOut(o : soa::Operation)]
  [for (p : soa::Parameter | o.output)]
        * @return [p.description(false)/]
  [/for]
[/template]

[template public comParamOutCallback(o : soa::Operation)]
  [if (o.output->isEmpty())]
        * @param callback
        *           (Out) le callback
  [else]
    [for (p : soa::Parameter | o.output)]
          * @param callback
          *           (Out) le callback pour retourner [p.description(false)/]
    [/for]
  [/if]
[/template]