[comment encoding = UTF-8 /]
[module generateClientGwtSoaLight('http://www.obeonetwork.org/dsl/environment/3.0.0',
                             'http://www.obeonetwork.org/dsl/soa/4.0.0',
							 'http://www.obeonetwork.org/dsl/entity/3.0.0')/]
[import fr::pacman::commons::common::classes /]
[import fr::pacman::soalight::common::outils /]
[import fr::pacman::soalight::files::genGwtUserBusiness /]
[import fr::pacman::soalight::files::genServiceGwtItf /]
[import fr::pacman::soalight::files::genServiceGwtAsync /]
[import fr::pacman::soalight::files::genServiceGwtImpl /]
[import fr::pacman::soalight::files::genIndexHtml /]
[import fr::pacman::soalight::files::genServiceGwtXml /]
[import fr::pacman::soalight::files::genGwtModuleBusiness /]
[import fr::pacman::soalight::files::genGwtModuleCommons /]

[template public GenerateClientGwtSystem(n : Namespace)]
[comment @main /]
[if (n.eContainer().oclIsUndefined())] [comment : on est sur le système racine /]
[for (clientType : String | getClientTypes())]
    [if clientType.equalsIgnoreCase('GWT')]
        [genGwtUserBusiness(n)/]
        [genIndexHtml(n)/]
        [genServiceGwtXml(n)/]
        [genGwtModuleBusiness(n)/]
        [genGwtModuleCommons(n)/]
 		[for (service : Service | n.eAllContents(Service))]
            [if service.serviceSeul()]
                [genServiceGwtItf(service)/]
                [genServiceGwtAsync(service)/]
                [genServiceGwtImpl(service)/]
            [/if]
        [/for]
    [/if]
[/for]
[/if]
[/template]

[template public GenerateClientGwtComponent(component : Component)]
[comment @main /]
[for (clientType : String | getClientTypes())]
    [if clientType.equalsIgnoreCase('GWT')]
        [comment aucune Entity générée côté client /]
        [for (service : Service | component.eAllContents(Service))]
                [genServiceGwtItf(service)/]
                [genServiceGwtAsync(service)/]
                [genServiceGwtImpl(service)/]
        [/for]
    [/if]
[/for]
[/template]

[template public GenerateClientGwtService(service : Service)]
[comment @main /]
[for (clientType : String | getClientTypes())]
    [if clientType.equalsIgnoreCase('GWT')]
        [comment aucune entity générée côté client /]
                [genServiceGwtItf(service)/]
                [genServiceGwtAsync(service)/]
                [genServiceGwtImpl(service)/]
    [/if]
[/for]
[/template]
