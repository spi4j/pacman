[module serviceFacadeItf('http://www.obeonetwork.org/dsl/soa/4.0.0', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::licence/]
[import fr::pacman::commons::common::attributes/]
[import fr::pacman::commons::soa::common::classes/]
[import fr::pacman::soalight::common::outils/]
[import fr::pacman::soalight::common::imports/]
[import fr::pacman::soalight::common::packages/]
[import fr::pacman::soalight::common::name/]
[import fr::pacman::soalight::common::commentaires/]
[import fr::pacman::soalight::common::attributes/]
[import fr::pacman::soalight::common::methodes/]
[import fr::pacman::soalight::common::classes/]
[import fr::pacman::commons::convention::rule::methodRule/]
[import fr::pacman::commons::common::names/]
[import fr::pacman::commons::common::packages/]
[import fr::pacman::commons::common::imports/]

[comment encoding = UTF-8 /]
[comment le Service existe sans DTO /]
[template public serviceFacadeItf(s : soa::Service)]
  [s.licence()/]
  package [s.buildPackageWsApi()/];
  
  [protected ('for imports') startTagPrefix('// ') endTagPrefix('// ')]
    
    
    import java.util.*;
    import java.util.List;
    
  [/protected]
  
  
  /**
   * Définit le contrat de services spécifique pour les services REST.
   * @author [s.getAuthorName()/]
   */
  public interface [s.buildServiceFacadeRSInterfaceName(null)/]
  {
  
  [if (not (s = null) and not (s.ownedInterface = null))]
    [for (o : soa::Operation | s.ownedInterface.ownedOperations)]
      [if (o.public)]
            /**
            * [o.description/].
        [o.getComParamsIn()/][o.comParamOut()/]    */
           // Annotations Méthode
           [protected (s.getUserCodeId('Annotations Méthode')) startTagPrefix('// ') endTagPrefix('// ')]
             
           [/protected]
        
           [o.paramOutXto()/] [o.name.apply_methodDefault()/] ([o.paramsInXto()/]);
          
      [/if]
    [/for]
  [/if]
     // [s.buildServiceFacadeInterfaceName()/]
     [protected (s.getUserCodeId(s.buildServiceFacadeInterfaceName())) startTagPrefix('// ') endTagPrefix('// ')]
       
     [/protected]
  
  }[/template]