[module genFileFacade('http://www.obeonetwork.org/dsl/environment/3.0.0', 'http://www.obeonetwork.org/dsl/soa/4.0.0')/]

[import fr::pacman::soalight::common::outils/]
[import fr::pacman::soalight::files::genService/]
[import fr::pacman::soalight::files::genServiceItf/]
[import fr::pacman::soalight::files::genServiceRequirements/]
[import fr::pacman::soalight::files::genServiceTest/]
[import fr::pacman::soalight::files::genUserBusiness/]
[import fr::pacman::soalight::files::genPermissionsItf/]
[import fr::pacman::soalight::files::genServiceCXF/]
[import fr::pacman::soalight::files::genServiceCXFItf/]
[import fr::pacman::soalight::files::genGwtModuleBusiness/]
[import fr::pacman::soalight::files::genGwtModuleCommons/]
[import fr::pacman::soalight::files::genGwtUserBusiness/]
[import fr::pacman::soalight::files::genServiceGwtAsync/]
[import fr::pacman::soalight::files::genServiceGwtImpl/]
[import fr::pacman::soalight::files::genServiceGwtItf/]
[import fr::pacman::soalight::files::genServiceGwtXml/]

[comment encoding = UTF-8 /]
[comment @main/]
[template public genGwtModuleBusiness_facade(n : environment::Namespace)]
  [if (n.eContainer() = null)]
        [n.genGwtModuleBusiness()/]
  [/if]
[/template]

[comment @main/]
[template public genGwtModuleCommons_facade(n : environment::Namespace)]
  [if (n.eContainer() = null)]
        [n.genGwtModuleCommons()/]
  [/if]
[/template]

[comment @main/]
[template public genGwtUserBusiness_facade(n : environment::Namespace)]
  [if (n.eContainer() = null)]
        [n.genGwtUserBusiness()/]
  [/if]
[/template]

[comment @main/]
[template public genServiceGwtXml_facade(n : environment::Namespace)]
  [if (n.eContainer() = null)]
        [n.genServiceGwtXml()/]
  [/if]
[/template]

[comment @main/]
[template public genServiceGwtItf_facade(s : soa::Service)]
      [s.genServiceGwtItf()/][/template]

[comment @main/]
[template public genServiceGwtImpl_facade(s : soa::Service)]
      [s.genServiceGwtImpl()/][/template]

[comment @main/]
[template public genServiceGwtAsync_facade(s : soa::Service)]
      [s.genServiceGwtAsync()/][/template]

[comment @main/]
[template public genPermissionsItf_facade(n : environment::Namespace)]
      [n.genPermissionsItf()/][/template]

[comment @main/]
[template public genService_facade(s : soa::Service)]
      [s.genService()/][/template]

[comment @main/]
[template public genServiceFacade_facade(s : soa::Service)]
      [s.genServiceCXF()/][/template]

[comment @main/]
[template public genServiceFacadeItf_facade(s : soa::Service)]
      [s.genServiceCXFItf()/][/template]

[comment @main/]
[template public genServiceItf_facade(s : soa::Service)]
      [s.genServiceItf()/][/template]

[comment @main/]
[template public genServiceRequirements_facade(s : soa::Service)]
      [s.genServiceRequirements()/][/template]

[comment @main/]
[template public genServiceTest_facade(s : soa::Service)]
      [s.genServiceTest()/][/template]

[comment @main/]
[template public genUserBusiness_facade(n : environment::Namespace)]
  [if (n.eContainer() = null)]    [n.genUserBusiness()/][/if]
[/template]

[comment]
[template public genWsdl_facade(s : Service)]
    [genWsdl(s)/]
[/template]
[/comment]