[comment encoding = UTF-8 /]
[module manageEvent('http://www.obeonetwork.org/dsl/cinematic/3.0.0')]

[import fr::pacman::cinematic::api::common::packages /]
[import fr::pacman::cinematic::api::common::name /]
[import fr::pacman::cinematic::gwt::common::name /]
[import fr::pacman::cinematic::gwt::common::packages /]
[import fr::pacman::cinematic::api::common::model /]
[import fr::pacman::commons::convention::rule::variableRule /]
[import fr::pacman::commons::common::imports /]
[import fr::pacman::commons::common::utils /]

[template public gestionTransition (etat : FlowState, evenement : String, fromMainPanel : Boolean) ]
[for (state : FlowState | Sequence{etat}->union(etat.getAllFollowingStatesWithoutGardOrEvent(false)))]
  [if state.oclIsKindOf(ViewState)]
	  [displayClearUserCodeId (evenement.getUserCodeId(evenement + ' : Affichage de ' + state.oclAsType(ViewState).name))/]
      // [protected (evenement.getUserCodeId(evenement + ' : Affichage de ' + state.oclAsType(ViewState).name))]
    [for (nextView : ViewContainer | state.oclAsType(ViewState).viewContainers)]
      // affichage de l'écran [nextView.name/]
      [namePresenter(nextView)/] [apply_variableDefault(nextView.name.normalize())/];
      try {
         // on tente d'instancier un nouvel écran
[if fromMainPanel]
         [apply_variableDefault(nextView.name.normalize())/] = new [namePresenter(nextView)/]();
[else]
         [apply_variableDefault(nextView.name.normalize())/] = new [namePresenter(nextView)/]([apply_variableDefault('rootPresenter')/]);
         [apply_variableDefault('rootPresenter')/].getView().addView([apply_variableDefault(nextView.name.normalize())/].getView());
[/if]
      } catch (ViewAlreadyRegisteredException v_e) {
         // si l'écran existe déjà on le récupère dans le gestionnaire de vues
         [apply_variableDefault(nextView.name.normalize())/] = getViewManager().getPresenter([namePresenter(nextView)/].class);
[if not fromMainPanel]
         [apply_variableDefault('rootPresenter')/].getView().restoreView([apply_variableDefault(nextView.name.normalize())/].getView());
[/if]
      }
    [/for]

      // [/protected]
[elseif state.oclIsKindOf(SubflowState)]
	  [displayClearUserCodeId (evenement.getUserCodeId(evenement + ' : Demarrage du Flow ' + state.oclAsType(SubflowState).name))/]
      // [protected (evenement.getUserCodeId(evenement + ' : Demarrage du Flow ' + state.oclAsType(SubflowState).name))]
      final [nameFlow(state.oclAsType(SubflowState).subflow)/] [apply_variableDefault(nameFlow(state.oclAsType(SubflowState).subflow).normalize())/] = new [nameFlow(state.oclAsType(SubflowState).subflow)/](this);
      [apply_variableDefault(nameFlow(state.oclAsType(SubflowState).subflow).normalize())/].start();
      // [/protected]
[elseif state.oclIsKindOf(ActionState)]
      [displayClearUserCodeId (evenement.getUserCodeId(evenement + ' : Action ' + state.oclAsType(ActionState).name))/]
	  // [protected (evenement.getUserCodeId(evenement + ' : Action ' + state.oclAsType(ActionState).name))]
      // TODO [state.oclAsType(ActionState).name/]
      // [/protected]

[/if]
[/for]
[/template]

[query public getViewEvents(event : Event) : Set(ViewEvent) =
    if (event.oclIsTypeOf(ViewEvent)) then
        Set{event}
    else
        if (event.oclIsTypeOf(FlowEvent)) then
            event.oclAsType(FlowEvent).binds.getViewEvents()
        else
            Set{}
        endif
    endif
/]
