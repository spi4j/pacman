[module generateCinematicGwt('http://www.obeonetwork.org/dsl/cinematic/3.0.0', 'http://www.obeonetwork.org/dsl/cinematic/view/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/flow/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/toolkits/1.0.0')/]

[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::properties/]
[import fr::pacman::cinematic::gwt::files::genGwtLanceur/]
[import fr::pacman::cinematic::gwt::files::genAppliAsyncCallback/]
[import fr::pacman::cinematic::gwt::files::genGwtViews/]
[import fr::pacman::cinematic::gwt::files::genPresenter/]
[import fr::pacman::cinematic::gwt::files::genViewImplementation/]
[import fr::pacman::cinematic::gwt::files::genModuleGwtXml/]
[import fr::pacman::cinematic::gwt::files::genFlowManager/]
[import fr::pacman::cinematic::api::common::model/]
[import fr::pacman::cinematic::gwt::common::name/]

[comment encoding = UTF-8 /]
[comment @main/]
[template public generate(root : cinematic::CinematicRoot)]
  [for (clientType : String | root.getClientTypes())]
    [if (clientType.equalsIgnoreCase('GWT'))]
      
      [root.genModuleGwtXml()/]
      [root.genGwtLanceur()/]
      [root.genAppliAsyncCallback()/]
      [root.genGwtViews(root.eAllContents(view::ViewContainer)->sortedBy(temp1 | temp1.name))/]
      
      [for (viewContainer : view::ViewContainer | root.eAllContents(view::ViewContainer))]
        [viewContainer.genPresenter()/]
        [viewContainer.genViewImplementation()/]
      [/for]
      
      [for (flow : flow::Flow | root.eAllContents(flow::Flow))]
        [flow.genFlowManager()/]
      [/for]
    [/if]
  [/for]
[/template]