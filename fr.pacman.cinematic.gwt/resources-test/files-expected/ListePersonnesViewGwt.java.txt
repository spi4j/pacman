package fr.appwhite1.client.ui.gwt.annuaire;

// Start of user code for imports

import fr.spi4j.ui.mvp.View_Itf;
import fr.spi4j.ui.gwt.client.SpiViewPanel;

import fr.appwhite1.client.ui.annuaire.ListePersonnesView_Itf;
import fr.appwhite1.client.ui.annuaire.ListePersonnesPresenter;

import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.event.logical.shared.ValueChangeEvent;
import com.google.gwt.event.logical.shared.ValueChangeHandler;

import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.ui.DialogBox;
import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.IsWidget;
import com.google.gwt.user.client.ui.VerticalPanel;

import fr.spi4j.ui.gwt.client.SpiViewPanel;

import fr.spi4j.ui.HasString_Itf;
import fr.spi4j.ui.HasSelection_Itf;
import fr.spi4j.ui.HasSelection_Itf;

import fr.referentiel.ws.api.ref.GradeXto;
import fr.appwhite1.ws.api.annuaire.PersonneXto;

import fr.spi4j.ui.gwt.client.SpiButton;
import fr.spi4j.ui.gwt.client.SpiComboBox;
import fr.spi4j.ui.gwt.client.SpiTable;

import fr.referentiel.ws.api.ref.GradeXto;
import fr.appwhite1.ws.api.annuaire.PersonneXto;



// End of user code

public class ListePersonnesViewGwt extends SpiViewPanel<ListePersonnesPresenter> implements ListePersonnesView_Itf
{

   // Start of user code Déclaration cbGrade_SpiComboBox<GradeXto>

   private final SpiComboBox<GradeXto> _cbGrade;

   // End of user code

   // Start of user code Déclaration table_SpiTable<PersonneXto>

   private final SpiTable<PersonneXto> _table;

   // End of user code

   // Start of user code Déclaration btActualiser_SpiButton

   private final SpiButton _btActualiser;

   // End of user code

   // Start of user code Déclaration btCreer_SpiButton

   private final SpiButton _btCreer;

   // End of user code

   // Start of user code Déclaration btModifier_SpiButton

   private final SpiButton _btModifier;

   // End of user code

   // Start of user code Déclaration btVisualiser_SpiButton

   private final SpiButton _btVisualiser;

   // End of user code

   // Start of user code Déclaration btSupprimer_SpiButton

   private final SpiButton _btSupprimer;

   // End of user code

   // Start of user code Attributs
   private final VerticalPanel _content;

   // End of user code
   /**
    * Constructeur de la vue.
    * @param p_presenter
    *           le présenteur de la vue
    */
   public ListePersonnesViewGwt (final ListePersonnesPresenter p_presenter)
   {
      super(p_presenter);

      // Start of user code avant initialisation
      _content = new VerticalPanel();
      _content.add(new HTML("<h1>ListePersonnes</h1>"));

      // End of user code

      // initialisation des composants
      // Start of user code Paramétrage cbGrade_SpiComboBox<GradeXto>

      _cbGrade = new SpiComboBox<GradeXto>();
      _content.add(_cbGrade);

      // End of user code

      _cbGrade.addValueChangeHandler(new ValueChangeHandler<GradeXto>()
      {
         @Override
         public void onValueChange (final ValueChangeEvent<GradeXto> p_event)
         {
            getPresenter().selectGrade();
         }
      });

      // Start of user code Paramétrage table_SpiTable<PersonneXto>

      _table = new SpiTable<PersonneXto>("table");
      _content.add(_table);

      // End of user code

      // Start of user code Paramétrage btActualiser_SpiButton

      _btActualiser = new SpiButton();
      _btActualiser.setText("btActualiser");
      _content.add(_btActualiser);

      // End of user code

      _btActualiser.addClickHandler(new ClickHandler()
      {
         @Override
         public void onClick (final ClickEvent p_event)
         {
            getPresenter().actualiser();
         }
      });

      // Start of user code Paramétrage btCreer_SpiButton

      _btCreer = new SpiButton();
      _btCreer.setText("btCreer");
      _content.add(_btCreer);

      // End of user code

      _btCreer.addClickHandler(new ClickHandler()
      {
         @Override
         public void onClick (final ClickEvent p_event)
         {
            getPresenter().creer();
         }
      });

      // Start of user code Paramétrage btModifier_SpiButton

      _btModifier = new SpiButton();
      _btModifier.setText("btModifier");
      _content.add(_btModifier);

      // End of user code

      _btModifier.addClickHandler(new ClickHandler()
      {
         @Override
         public void onClick (final ClickEvent p_event)
         {
            getPresenter().modifier();
         }
      });

      // Start of user code Paramétrage btVisualiser_SpiButton

      _btVisualiser = new SpiButton();
      _btVisualiser.setText("btVisualiser");
      _content.add(_btVisualiser);

      // End of user code

      _btVisualiser.addClickHandler(new ClickHandler()
      {
         @Override
         public void onClick (final ClickEvent p_event)
         {
            getPresenter().visualiser();
         }
      });

      // Start of user code Paramétrage btSupprimer_SpiButton

      _btSupprimer = new SpiButton();
      _btSupprimer.setText("btSupprimer");
      _content.add(_btSupprimer);

      // End of user code

      _btSupprimer.addClickHandler(new ClickHandler()
      {
         @Override
         public void onClick (final ClickEvent p_event)
         {
            getPresenter().supprimer();
         }
      });

      // Start of user code après initialisation
      add(_content);


      // End of user code
   }

   @Override
   public void addView (final View_Itf p_view)
   {
      // Start of user code addView
      if (p_view instanceof IsWidget)
      {
         if (p_view instanceof DialogBox)
         {
            ((DialogBox) p_view).center();
         }
         else
         {
            _content.add((IsWidget) p_view);
         }
      }
      else
      {
         Window.alert("Vue inconnue : " + p_view.getClass().getName());
      }
      // End of user code
   }

   @Override
   public void restoreView (final View_Itf p_view)
   {
      // Start of user code restoreView

      // End of user code
   }

   @Override
   public void removeView (final View_Itf p_view)
   {
      // Start of user code removeView
      if (p_view instanceof IsWidget)
      {
         if (p_view instanceof DialogBox)
         {
            ((DialogBox) p_view).hide();
         }
         else
         {
            _content.remove((IsWidget) p_view);
         }
      }
      else
      {
         Window.alert("Vue inconnue : " + p_view.getClass().getName());
      }
      // End of user code
   }

   // Start of user code Getter cbGrade_SpiComboBox<GradeXto>

   @Override
   public HasSelection_Itf<GradeXto> get_cbGrade ()
   {
      return _cbGrade;
   }

   // End of user code

   // Start of user code Getter table_SpiTable<PersonneXto>

   @Override
   public HasSelection_Itf<PersonneXto> get_table ()
   {
      return _table;
   }

   // End of user code

   // Start of user code Getter btActualiser_SpiButton

   @Override
   public HasString_Itf get_btActualiser ()
   {
      return _btActualiser;
   }

   // End of user code

   // Start of user code Getter btCreer_SpiButton

   @Override
   public HasString_Itf get_btCreer ()
   {
      return _btCreer;
   }

   // End of user code

   // Start of user code Getter btModifier_SpiButton

   @Override
   public HasString_Itf get_btModifier ()
   {
      return _btModifier;
   }

   // End of user code

   // Start of user code Getter btVisualiser_SpiButton

   @Override
   public HasString_Itf get_btVisualiser ()
   {
      return _btVisualiser;
   }

   // End of user code

   // Start of user code Getter btSupprimer_SpiButton

   @Override
   public HasString_Itf get_btSupprimer ()
   {
      return _btSupprimer;
   }

   // End of user code

   // Start of user code ListePersonnesViewGwt

   // End of user code

}
