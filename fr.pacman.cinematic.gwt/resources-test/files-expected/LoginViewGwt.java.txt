package fr.appwhite1.client.ui.gwt;

// Start of user code for imports

import fr.spi4j.ui.mvp.View_Itf;
import fr.spi4j.ui.gwt.client.SpiViewPanel;

import fr.appwhite1.client.ui.LoginView_Itf;
import fr.appwhite1.client.ui.LoginPresenter;

import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.event.logical.shared.ValueChangeEvent;
import com.google.gwt.event.logical.shared.ValueChangeHandler;

import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.ui.DialogBox;
import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.IsWidget;
import com.google.gwt.user.client.ui.VerticalPanel;

import fr.spi4j.ui.gwt.client.SpiViewDialog;

import fr.spi4j.ui.HasString_Itf;
import fr.spi4j.ui.HasString_Itf;
import fr.spi4j.ui.HasString_Itf;


import fr.spi4j.ui.gwt.client.SpiButton;
import fr.spi4j.ui.gwt.client.SpiPasswordField;
import fr.spi4j.ui.gwt.client.SpiStringField;




// End of user code

public class LoginViewGwt extends SpiViewDialog<LoginPresenter> implements LoginView_Itf
{

   // Start of user code Déclaration txtLogin_SpiStringField

   private final SpiStringField _txtLogin;

   // End of user code

   // Start of user code Déclaration txtPassword_SpiPasswordField

   private final SpiPasswordField _txtPassword;

   // End of user code

   // Start of user code Déclaration btConnecter_SpiButton

   private final SpiButton _btConnecter;

   // End of user code

   // Start of user code Déclaration btAnnuler_SpiButton

   private final SpiButton _btAnnuler;

   // End of user code

   // Start of user code Attributs
   private final VerticalPanel _content;

   // End of user code
   /**
    * Constructeur de la vue.
    * @param p_presenter
    *           le présenteur de la vue
    */
   public LoginViewGwt (final LoginPresenter p_presenter)
   {
      super(p_presenter);

      // Start of user code avant initialisation
      _content = new VerticalPanel();
      _content.add(new HTML("<h1>Login</h1>"));

      // End of user code

      // initialisation des composants
      // Start of user code Paramétrage txtLogin_SpiStringField

      _txtLogin = new SpiStringField();
      _content.add(_txtLogin);

      // End of user code

      // Start of user code Paramétrage txtPassword_SpiPasswordField

      _txtPassword = new SpiPasswordField();
      _content.add(_txtPassword);

      // End of user code

      // Start of user code Paramétrage btConnecter_SpiButton

      _btConnecter = new SpiButton();
      _btConnecter.setText("btConnecter");
      _content.add(_btConnecter);

      // End of user code

      _btConnecter.addClickHandler(new ClickHandler()
      {
         @Override
         public void onClick (final ClickEvent p_event)
         {
            getPresenter().onClicConnecter();
         }
      });

      // Start of user code Paramétrage btAnnuler_SpiButton

      _btAnnuler = new SpiButton();
      _btAnnuler.setText("btAnnuler");
      _content.add(_btAnnuler);

      // End of user code

      _btAnnuler.addClickHandler(new ClickHandler()
      {
         @Override
         public void onClick (final ClickEvent p_event)
         {
            getPresenter().onClicAnnuler();
         }
      });

      // Start of user code après initialisation
      add(_content);


      // End of user code
   }

   @Override
   public void addView (final View_Itf p_view)
   {
      // Start of user code addView
      if (p_view instanceof IsWidget)
      {
         if (p_view instanceof DialogBox)
         {
            ((DialogBox) p_view).center();
         }
         else
         {
            _content.add((IsWidget) p_view);
         }
      }
      else
      {
         Window.alert("Vue inconnue : " + p_view.getClass().getName());
      }
      // End of user code
   }

   @Override
   public void restoreView (final View_Itf p_view)
   {
      // Start of user code restoreView

      // End of user code
   }

   @Override
   public void removeView (final View_Itf p_view)
   {
      // Start of user code removeView
      if (p_view instanceof IsWidget)
      {
         if (p_view instanceof DialogBox)
         {
            ((DialogBox) p_view).hide();
         }
         else
         {
            _content.remove((IsWidget) p_view);
         }
      }
      else
      {
         Window.alert("Vue inconnue : " + p_view.getClass().getName());
      }
      // End of user code
   }

   // Start of user code Getter txtLogin_SpiStringField

   @Override
   public HasString_Itf get_txtLogin ()
   {
      return _txtLogin;
   }

   // End of user code

   // Start of user code Getter txtPassword_SpiPasswordField

   @Override
   public HasString_Itf get_txtPassword ()
   {
      return _txtPassword;
   }

   // End of user code

   // Start of user code Getter btConnecter_SpiButton

   @Override
   public HasString_Itf get_btConnecter ()
   {
      return _btConnecter;
   }

   // End of user code

   // Start of user code Getter btAnnuler_SpiButton

   @Override
   public HasString_Itf get_btAnnuler ()
   {
      return _btAnnuler;
   }

   // End of user code

   // Start of user code LoginViewGwt

   // End of user code

}
