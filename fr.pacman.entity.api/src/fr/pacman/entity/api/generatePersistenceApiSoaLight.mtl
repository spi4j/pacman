[comment encoding = UTF-8 /]
[module generatePersistenceApiSoaLight('http://www.obeonetwork.org/dsl/entity/3.0.0','http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::properties /]
[import fr::pacman::commons::common::utils /]

[import fr::pacman::entity::api::files::genEntityColumnsEnum /]
[import fr::pacman::entity::api::files::genEntityItf /]
[import fr::pacman::entity::api::files::genEntity /]
[import fr::pacman::entity::api::files::genUserPersistenceApp /]
[import fr::pacman::entity::api::files::genParamAppli /]
[import fr::pacman::entity::api::files::genAppliColumnsEnum /]
[import fr::pacman::entity::api::files::genAppliEntityItf /]
[import fr::pacman::entity::api::files::genAppliEntityAbs /]
[import fr::pacman::entity::api::files::genAttributesEnum /]
[import fr::pacman::entity::api::files::genXto /]
[import fr::pacman::entity::api::files::genXtoTest /]
[import fr::pacman::entity::api::files::genServiceItf /]
[import fr::pacman::entity::api::files::genUserBusiness /]
[import fr::pacman::entity::api::files::genUserBusinessEntity /]
[import fr::pacman::entity::api::files::genDaoItf /]
[import fr::pacman::entity::api::sql::common /]
[import fr::pacman::entity::api::common::attributes /]
[import fr::pacman::entity::api::common::xtoutils /]


[template public generatePersistenceApi(r : Root)]
[comment @main /]
[comment genParamPersistence(r)/]
[genParamAppli(r)/]
[genUserPersistenceApp(r)/]

[if hasAutomaticColumns()]
    [genAppliColumnsEnum(r)/]
    [genAppliEntityAbs()/]
[/if]

[genAppliEntityItf()/]
[comment : agglom√©ration des mains /]
[for (entity : Entity | r.eAllContents(Entity))]
    [genEntityItf(entity)/]
    [genEntity(entity)/]
    [genServiceItf(entity)/]
    [if clientNeedXto() or useWS() ]
        [genXto(entity)/]
        [genXtoTest(entity)/]
    [/if]
    [if not entity.isNotPersistent()]
        [genEntityColumnsEnum(entity)/]
        [genDaoItf(entity)/]
    [/if]
[/for]
    [genUserBusinessEntity(r)/]
[/template]

[template public generatePersistenceApiBlock(n : Namespace)]
[comment @main /]
[for (entity : Entity | n.eAllContents(Entity))]
    [genEntityItf(entity)/]
    [genEntity(entity)/]
    [genServiceItf(entity)/]
    [if clientNeedXto() or useWS() ]
        [genXto(entity)/]
        [genXtoTest(entity)/]
    [/if]
    [if not entity.isNotPersistent()]
         [genEntityColumnsEnum(entity)/]
         [genDaoItf(entity)/]
    [/if]
[/for]
[/template]

[template public generatePersistenceApiEntity(entity : Entity)]
[comment @main /]
    [genEntityItf(entity)/]
    [genEntity(entity)/]
    [genServiceItf(entity)/]
    [if clientNeedXto() or useWS()]
      [genXto(entity)/]
      [genXtoTest(entity)/]
    [/if]
    [if not entity.isNotPersistent()]
        [genEntityColumnsEnum(entity)/]
        [genDaoItf(entity)/]
    [/if]
[/template]
