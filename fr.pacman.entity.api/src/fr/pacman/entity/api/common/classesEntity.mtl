[module classesEntity('http://www.obeonetwork.org/dsl/entity/3.0.0', 'http://www.obeonetwork.org/dsl/entity/2.0.0/utilities', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::utils/]
[import fr::pacman::commons::services::AnnotationUtils/]
[import fr::pacman::commons::services::MandatoryUtils/]

[comment encoding = UTF-8 /]
[query private hasPhysicalName(p : environment::Property) : Boolean = p.getAnnotationBody('PHYSICAL_NAME', false) <> null/]

[query private hasPhysicalName(e : entity::Entity) : Boolean = e.getAnnotationBody('PHYSICAL_NAME', false) <> null/]

[template public physicalName(e : entity::Entity)]
  [if (e.hasPhysicalName())][e.getAnnotationBody('PHYSICAL_NAME', false)/][else][e.name.sanitize().toUpper()/][/if][/template]

[template public physicalName(p : environment::Property)]
  [if (p.hasPhysicalName())][p.getAnnotationBody('PHYSICAL_NAME', false)/][else][p.name.sanitize().toUpper()/][/if][/template]

[template public physicalNameJointure(r : environment::Reference)]
  [if (r.hasPhysicalName())][r.getAnnotationBody('PHYSICAL_NAME', false)/][else][r.containingType.oclAsType(entity::Entity).name.sanitize().toUpper()/][r.referencedType.oclAsType(entity::Entity).name.sanitize().toUpper()/][/if][/template]

[comment NTITY : Teste si une propriété (attribut ou référence) est obligatoire/]
[query public isMandatory(p : environment::Property) : Boolean = p.isMandatoryEntity()/]

[comment etourne true si les métadonnées contiennent l'annotation FIC_CSV/]
[query public hasFicCsv(e : entity::Entity) : Boolean = e.metadatas.getAnnotationBody('FIC_CSV') <> null/]

[comment etourne le contenu de l'annotation FIC_CSV dans ces métadonnées, ou rien si l'annotation n'existe pas/]
[query public ficCsv(e : entity::Entity) : String = if e.hasFicCsv() then e.metadatas.getAnnotationBody('FIC_CSV') else '' endif/]

[comment etourne true si les métadonnées contiennent l'annotation EXCLUDE_CRITERIA/]
[query public hasExcludeCriteria(e : entity::Entity) : Boolean = e.metadatas.getAnnotationBody('EXCLUDE_CRITERIA') <> null/]

[comment etourne le contenu de l'annotation EXCLUDE_CRITERIA dans ces métadonnées, ou rien si l'annotation n'existe pas/]
[query public excludeCriteria(e : entity::Entity) : String = if e.hasExcludeCriteria() then e.metadatas.getAnnotationBody('EXCLUDE_CRITERIA') else '' endif/]

[comment etourne true si les métadonnées contiennent l'annotation INCLUDE_CRITERIA/]
[query public hasIncludeCriteria(e : entity::Entity) : Boolean = e.metadatas.getAnnotationBody('INCLUDE_CRITERIA') <> null/]

[comment etourne le contenu de l'annotation INCLUDE_CRITERIA dans ces métadonnées, ou rien si l'annotation n'existe pas/]
[query public includeCriteria(e : entity::Entity) : String = if e.hasIncludeCriteria() then e.metadatas.getAnnotationBody('INCLUDE_CRITERIA') else '' endif/]

[comment etourne true si les métadonnées contiennent l'annotation EXCLUDE_CRITERIA/]
[query public hasExcludeCriteria(r : environment::Reference) : Boolean = r.metadatas.getAnnotationBody('EXCLUDE_CRITERIA') <> null/]

[comment etourne le contenu de l'annotation EXCLUDE_CRITERIA dans ces métadonnées, ou rien si l'annotation n'existe pas/]
[query public excludeCriteria(r : environment::Reference) : String = if r.hasExcludeCriteria() then r.metadatas.getAnnotationBody('EXCLUDE_CRITERIA') else '' endif/]

[comment etourne true si les métadonnées contiennent l'annotation INCLUDE_CRITERIA/]
[query public hasIncludeCriteria(r : environment::Reference) : Boolean = r.metadatas.getAnnotationBody('INCLUDE_CRITERIA') <> null/]

[comment etourne le contenu de l'annotation INCLUDE_CRITERIA dans ces métadonnées, ou rien si l'annotation n'existe pas/]
[query public includeCriteria(r : environment::Reference) : String = if r.hasIncludeCriteria() then r.metadatas.getAnnotationBody('INCLUDE_CRITERIA') else '' endif/]

[comment etourne true si les métadonnées contiennent l'annotation FK_CRITERE/]
[query public hasFkCritere(r : environment::Reference) : Boolean = r.metadatas.getAnnotationBody('FK_CRITERE') <> null/]

[comment etourne le contenu de l'annotation FK_CRITERE dans ces métadonnées, ou rien si l'annotation n'existe pas/]
[query public fkCritere(r : environment::Reference) : String = if r.hasFkCritere() then r.metadatas.getAnnotationBody('FK_CRITERE') else '' endif/]

[comment etourne true si les métadonnées contiennent l'annotation PHYSICAL_UNIQUE/]
[query public hasPhysicalUnique(e : entity::Entity) : Boolean = e.metadatas.getAnnotationBody('PHYSICAL_UNIQUE') <> null/]

[comment etourne le contenu de l'annotation PHYSICAL_UNIQUE dans ces métadonnées, ou rien si l'annotation n'existe pas/]
[query public physicalUnique(e : entity::Entity) : String = if e.hasPhysicalUnique() then e.metadatas.getAnnotationBody('PHYSICAL_UNIQUE') else '' endif/]
