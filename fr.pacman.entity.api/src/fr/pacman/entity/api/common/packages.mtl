[module packages('http://www.obeonetwork.org/dsl/entity/3.0.0', 'http://www.obeonetwork.org/dsl/entity/2.0.0/utilities', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::utils/]
[import fr::pacman::commons::common::packages/]
[import fr::pacman::commons::common::names/]
[import fr::pacman::commons::convention::rule::classRule/]
[import fr::pacman::entity::api::common::names/]

[comment encoding = UTF-8 /]
[**
 * Paramétrage début
*/]
[query public buildPackagePersistenceApiEntity(e : entity::Entity) : String = e.buildPackagePersistenceApi() + e.blockHierarchy()/]

[query public buildPackagePersistenceImplementationJdbcEntity(e : entity::Entity) : String = e.buildPackagePersistence() + '.' + e.getPackageImplJdbc() + e.blockHierarchy()/]

[query public buildPackageEntityMapper(e : entity::Entity) : String = e.buildPackageMapper() + e.blockHierarchy()/]

[query public buildPackageWsApiEntity(e : entity::Entity) : String = e.buildPackageWs() + '.' + e.getPackageApi() + e.blockHierarchy()/]

[query public buildPackagePersistenceReferentielEntity(e : entity::Entity) : String = e.buildPackagePersistenceReferentiel() + e.blockHierarchy()/]

[query public buildPackagePersistenceReferentielReference(r : environment::Reference) : String = r.buildPackagePersistenceReferentiel() + r.blockHierarchy()/]

[query public buildPackageBusinessImplementationServiceEntity(e : entity::Entity) : String = if not (e = null) then e.buildPackageImplBusiness() + e.categoryHierarchy() else 'PACKAGE NOT FOUND FOR SERVICE AND ENTITY NULL' endif/]

[query public buildPackageBusinessApiService(e : entity::Entity) : String = if not (e = null) then e.buildPackageBusinessApiEntity() else 'PACKAGE NOT FOUND FOR SERVICE AND DTO NULL' endif/]

[query public buildPackageBusinessApiEntity(e : entity::Entity) : String = e.buildPackageBusinessApi() + e.categoryHierarchy()/]

[**
 * Paramétrage Fin
*/]
[template public blockHierarchy(e : entity::Entity) post(self.trim())]
  [if (e.ancestors(environment::Namespace)->size() < 1)]
  [else]
    .[e.ancestors(environment::Namespace)->select(temp1 | not (temp1.name = null))->reverse()->collect(temp2 | temp2.oclAsType(environment::Namespace))->collect(temp3 | temp3.name)->collect(temp4 | temp4.sanitize())->collect(temp5 | temp5.toLower())->sep('.')/]
  [/if]
[/template]

[template public blockHierarchy(r : environment::Reference) post(self.trim())]
  [if (r.ancestors(environment::Namespace)->size() < 1)]
  [else]
    .[r.ancestors(environment::Namespace)->select(temp6 | not (temp6.name = null))->reverse()->collect(temp7 | temp7.oclAsType(environment::Namespace))->collect(temp8 | temp8.name)->collect(temp9 | temp9.sanitize())->collect(temp10 | temp10.toLower())->sep('.')/]
  [/if]
[/template]