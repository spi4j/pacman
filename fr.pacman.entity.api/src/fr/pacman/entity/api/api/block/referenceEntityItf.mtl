[module referenceEntityItf('http://www.obeonetwork.org/dsl/entity/3.0.0', 'http://www.obeonetwork.org/dsl/entity/2.0.0/utilities', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::licence/]
[import fr::pacman::commons::common::attributes/]
[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::packages/]
[import fr::pacman::commons::common::properties/]
[import fr::pacman::commons::common::imports/]
[import fr::pacman::entity::api::common::packages/]
[import fr::pacman::entity::api::common::names/]
[import fr::pacman::entity::api::common::attributes/]
[import fr::pacman::entity::api::common::methodes/]
[import fr::pacman::entity::api::common::commentaires/]
[import fr::pacman::entity::api::sql::common/]
[import fr::pacman::entity::api::common::buildClassesEntityApi/]
[import fr::pacman::commons::convention::project::surcouche/]
[import fr::pacman::commons::convention::rule::attributeRule/]
[import fr::pacman::commons::convention::rule::methodRule/]

[comment encoding = UTF-8 /]
[template public referenceEntityItf(r : environment::Reference)]
  [r.licence()/]
  package [r.containingType.oclAsType(entity::Entity).buildPackagePersistenceApiEntity()/];
  [protected ('for imports') startTagPrefix('// ') endTagPrefix('// ')]
    
    [r.writeImports()/]
    
  [/protected]
  
  
  [r.comClass(r.roleEntityItf())/]
  public interface [r.buildReferenceEntityInterfaceName()/] extends [if (r.hasAutomaticColumns())][r.buildAppliEntityInterfaceName()/]<[r.genPkType()/]>[else][r.getClassNameForEntity_Itf()/]<[r.genPkType()/]>[/if]
  
  {
     // CONSTANTES
  
     // Constantes [r.buildReferenceEntityInterfaceName()/]
     [protected (r.getUserCodeId('Constantes ' + r.buildReferenceEntityInterfaceName())) startTagPrefix('// ') endTagPrefix('// ')]
       
     [/protected]
  
  
     // METHODES ABSTRAITES	
  
  	/**
  		Obtenir [r.containingType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault()/] 
  		@return [r.containingType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault()/] 	
      */
  	[r.genPkType()/]  [r.containingType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault().apply_methodGet()/]();
  	
  
  	/**
  		Obtenir [r.referencedType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault()/] 
  		@return [r.referencedType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault()/] 
  		
      */
  	[r.genPkType()/] [r.referencedType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault().apply_methodGet()/]();
  	
  	
  	
     /**
  		Affecter [r.containingType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault()/] 						
      */
  	
  	public void [r.containingType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault().apply_methodSet()/]([r.genPkType()/] [r.containingType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault()/]);
  
  	
     /**
  		Affecter [r.referencedType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault()/] 
  					
      */
  
  	public void [r.referencedType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault().apply_methodSet()/]([r.genPkType()/] [r.referencedType.oclAsType(entity::Entity).nameSimplePropertyID().apply_attributeDefault()/]);
  
    
  
  }[/template]

[comment : Write all required imports. /]
[template private writeImports(r : environment::Reference) post(self.trim())]
  [r.initImports()/]
  [r.addImport(r.buildPackagePersistenceApi() + '.' + r.buildAppliEntityInterfaceName(), r.hasAutomaticColumns())/]
  [r.addImport(r.getImportForEntity_Itf(), not r.hasAutomaticColumns())/]
  [r.flushImports()/][/template]

[query public roleEntityItf(r : environment::Reference) : String = 'L\'interface d√©finissant le contrat de persistance pour le type ' + r.buildReferenceEntityInterfaceName()/]