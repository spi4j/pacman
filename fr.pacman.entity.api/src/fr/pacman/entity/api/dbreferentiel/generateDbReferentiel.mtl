[comment encoding = UTF-8 /]
[module generateDbReferentiel('http://www.obeonetwork.org/dsl/entity/3.0.0',
                           'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::entity::api::dbreferentiel::ReferentielUtils /]
[import fr::pacman::entity::api::dbreferentiel::DbReferentiel /]
[import fr::pacman::entity::api::dbreferentiel::genReferentielEntity/]
[import fr::pacman::entity::api::dbreferentiel::genReferentielReference/]

[template public generate(r : Root)]
[comment @main /]

[createReferentielUtils(r)/]

[for (b : Namespace | r.eAllContents(Namespace))]

    [for (e : Entity | b.types->select(el|el.oclIsKindOf(entity::Entity)))]
	[genReferentielEntity(e)/]
    [/for]

[for (it : Entity | b.types->select(el|el.oclIsKindOf(entity::Entity)))]
   [for (ref : Reference | it.references)]
      [if (ref.navigable)]
[if (isRelationN1(ref))]
	[genReferentielReference(ref, b)/]
[/if]
      [/if]
   [/for]
[/for]


    [createReferentiel(b)/]

[/for]

[/template]

[query private isRelationN1(ref : Reference) : Boolean =
    if (ref.multiplicity = environment::MultiplicityKind::ZERO_ONE or ref.multiplicity = environment::MultiplicityKind::ONE) then
        if (not ref.oppositeOf.oclIsUndefined()) then
            if (ref.oppositeOf.multiplicity = environment::MultiplicityKind::ZERO_STAR or ref.oppositeOf.multiplicity = environment::MultiplicityKind::ONE_STAR) then
                true
            else
                false
            endif
        else
            true
        endif
    else
        false
    endif
/]
