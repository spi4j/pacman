[module genClient('http://www.eclipse.org/ocl/1.1.0/Ecore')/]

[import fr::pacman::commons::common::properties/]
[import fr::pacman::commons::common::log4j/]
[import fr::pacman::commons::common::packages/]
[import fr::pacman::commons::common::names/]
[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::scripts/]
[import fr::pacman::configuration::project::ClientSwing/]
[import fr::pacman::configuration::project::ClientIntegration/]
[import fr::pacman::configuration::project::ClientJavaWebStart/]
[import fr::pacman::configuration::project::ClientGwt/]
[import fr::pacman::configuration::project::ClientJsf/]
[import fr::pacman::configuration::project::ClientJsp/]
[import fr::pacman::configuration::project::Bootstrap/]
[import fr::pacman::configuration::files::genBDD/]
[import fr::pacman::configuration::common::listeners/]
[import fr::pacman::configuration::common::properties/]
[import fr::pacman::configuration::common::names/]
[import fr::pacman::configuration::common::startupScripts/]

[comment encoding = UTF-8 /]
[template public genClient(any : ecore::EObject, fromStarter : Boolean)]
  
  [if ('swing'.equalsIgnoreCase(any.getClient()))]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientSwingProjectName().filename('', 'pom.xml'), overwrite, 'UTF-8')]
        [any.clientSwingPom()/]
      [/file]
      [file (any.getClientIntegrationProjectName().filename('', 'pom.xml'), overwrite, 'UTF-8')]
        [any.integrationPom()/]
      [/file]
      [file (any.getClientJavaWebStartProjectName().filename('', 'pom.xml'), overwrite, 'UTF-8')]
        [any.javaWebStartPom()/]
      [/file]
    [/if]
    
    [if (any.useLog4J() and (fromStarter or any.hasToGenerateRootFiles()))]
      
      [file (any.getClientJavaWebStartProjectName().filename(any.getClientJavaWebStartResourcesDir(), 'log4j2.xml'), overwrite, 'UTF-8')]
        [any.log4j('webstart')/]
      [/file]
      
      [file (any.getClientSwingProjectName().filename(any.getClientSwingResourcesDir(), 'log4j2.xml'), overwrite, 'UTF-8')]
        [any.log4j('swing')/]
      [/file]
      
    [/if]
    
    [if (any.useTestBDD())]
      [any.getClientIntegrationProjectName().genBDD(any.getClientSwingTestDir())/]
    [/if]
    
    [file (any.getClientJavaWebStartProjectName().filename('', 'build-jws.xml'), overwrite, 'UTF-8')]
      [any.javaWebStartBuildJwsXml()/]
    [/file]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientJavaWebStartProjectName().filename(any.getClientJWebStartWebDir(), 'web.xml'), overwrite, 'UTF-8')]
        [any.javaWebStartWebXml()/]
      [/file]
    [/if]
    
    [file (any.getClientJavaWebStartProjectName().filename(any.getClientJWebStartSourceDir(), 'index.html'), overwrite, 'UTF-8')]
      [any.javaWebStartIndexHtml()/]
    [/file]
    
    [file (any.getClientJavaWebStartProjectName().filename(any.getClientJWebStartSourceDir(), 'client.jnlp'), overwrite, 'UTF-8')]
      [any.javaWebStartClientJnlp()/]
    [/file]
    
    [file (any.getClientJavaWebStartProjectName().filename(any.getClientJWebStartSourceDir(), 'player.jnlp'), overwrite, 'UTF-8')]
      [any.javaWebStartPlayerJnlp()/]
    [/file]
    
    [file (any.getClientJavaWebStartProjectName().filename(any.getClientJWebStartKeyDir(), 'README.txt'), overwrite, 'UTF-8')]
      [any.javaWebStartReadmeTxt()/]
    [/file]
    
    [file (any.getClientIntegrationProjectName().filename(any.getClientIntegrationSourceDir() + any.buildPackageClientIntegrationLauncher(), 'SwingLanceurDev.java'), overwrite, 'UTF-8')]
      [any.integrationSwingLanceurDev()/]
    [/file]
    
  [elseif ('gwt'.equalsIgnoreCase(any.getClient()))]
    
    [if ((fromStarter or any.hasToGenerateRootFiles()) and any.hasHttpEmbeddedServer())]
      [file (any.getClientGwtProjectName().filename(any.getClientGwtResourcesDir(), any.buildEmbeddedHttpScriptName()), overwrite, 'UTF-8')]
        [any.clientEmbeddedHttpServerBat()/]
      [/file]
      
      [file (any.getClientGwtProjectName().filename(any.getClientGwtResourcesDir(), any.buildEmbeddedHttpStartupScriptName()), overwrite, 'UTF-8')]
        [any.clientEmbeddedHttpStartupBat()/]
      [/file]
    [/if]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientGwtProjectName().filename('', 'pom.xml'), overwrite, 'UTF-8')]
        [any.clientGwtPom()/]
      [/file]
    [/if]
    
    [if (any.useTestBDD())]
      [any.getClientGwtProjectName().genBDD(any.getClientGwtTestDir())/]
    [/if]
    
    [if (any.useLog4J() and (fromStarter or any.hasToGenerateRootFiles()))]
      [file (any.getClientGwtProjectName().filename(any.getClientGwtResourcesDir(), 'log4j2.xml'), overwrite, 'UTF-8')]
        [any.log4j('swing')/]
      [/file]
    [/if]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientGwtProjectName().filename(any.getClientGwtWebDir(), 'web.xml'), overwrite, 'UTF-8')]
        [any.clientGwtWebXml()/]
      [/file]
    [/if]
    
    [file (any.getClientGwtProjectName().filename(any.getClientGwtWebDir(), any.buildServicesXmlName()), overwrite, 'UTF-8')]
    [/file]
    
  [elseif ('jsf'.equalsIgnoreCase(any.getClient()))]
    
    [if ((fromStarter or any.hasToGenerateRootFiles()) and any.hasHttpEmbeddedServer())]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfResourcesDir(), any.buildEmbeddedHttpScriptName()), overwrite, 'UTF-8')]
        [any.clientEmbeddedHttpServerBat()/]
      [/file]
      
      [file (any.getClientJsfProjectName().filename(any.getClientJsfResourcesDir(), any.buildEmbeddedHttpStartupScriptName()), overwrite, 'UTF-8')]
        [any.clientEmbeddedHttpStartupBat()/]
      [/file]
    [/if]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientJsfProjectName().filename('', 'pom.xml'), overwrite, 'UTF-8')]
        [any.clientJsfPom()/]
      [/file]
    [/if]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfWebDir(), 'faces-config.xml'), overwrite, 'UTF-8')]
        [any.clientJsfFacesConfigXml()/]
      [/file]
    [/if]
    
    [file (any.getClientJsfProjectName().filename(any.getClientJsfSourceDir(), any.buildJsfCommonPackage(), any.buildAppliIdConverterXmlName() + '.java'), overwrite, 'UTF-8')]
      [any.clientJsfConverter()/]
    [/file]
    
    [if (any.useLog4J() and (fromStarter or any.hasToGenerateRootFiles()))]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfResourcesDir(), 'log4j2.xml'), overwrite, 'UTF-8')]
        [any.log4j('swing')/]
      [/file]
    [/if]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfWebDir(), 'web.xml'), overwrite, 'UTF-8')]
        [any.clientJsfWebXml()/]
      [/file]
    [/if]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfWebDir(), 'templates/layout.xhtml'), overwrite, 'UTF-8')]
        [any.clientJsfLayoutXhtml()/]
      [/file]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfWebappDir(), 'index.xhtml'), overwrite, 'UTF-8')]
        [any.clientJsfIndexXhtml()/]
      [/file]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfWebDir(), 'templates/header.xhtml'), overwrite, 'UTF-8')]
        [any.clientJsfHeaderXhtml()/]
      [/file]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfWebDir(), 'templates/content.xhtml'), overwrite, 'UTF-8')]
        [any.clientJsfContentXhtml()/]
      [/file]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfWebDir(), 'templates/footer.xhtml'), overwrite, 'UTF-8')]
        [any.clientJsfFooterXhtml()/]
      [/file]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfResourcesDir(), 'css/styles.css'), overwrite, 'UTF-8')]
        [any.clientJsfStylesCss()/]
      [/file]
    [/if]
    
    [file (any.getClientJsfProjectName().filename(any.getClientJsfSourceDir(), any.buildBeanPackage(), any.buildJsfBeanAbstractName() + '.java'), overwrite, 'UTF-8')]
      [any.clientJsfAbstractBean()/]
    [/file]
    [file (any.getClientJsfProjectName().filename(any.getClientJsfSourceDir(), any.getApplicationPackage(), 'InitializationListener.java'), overwrite, 'UTF-8')]
      [any.clientInitialiseListener()/]
    [/file]
    
    [if ((fromStarter or any.hasToGenerateRootFiles()) and any.hasHttpEmbeddedServer())]
      [file (any.getClientJsfProjectName().filename(any.getClientJsfSourceDir(), any.getApplicationPackage(), any.buildBoostrapClassName() + '.java'), overwrite, 'UTF-8')]
        [any.httpServerBootstrap(false)/]
      [/file]
    [/if]
    
  [elseif ('jsp'.equalsIgnoreCase(any.getClient()))]
    
    [if ((fromStarter or any.hasToGenerateRootFiles()) and any.hasHttpEmbeddedServer())]
      [file (any.getClientJspProjectName().filename(any.getClientJspResourcesDir(), any.buildEmbeddedHttpScriptName()), overwrite, 'UTF-8')]
        [any.clientEmbeddedHttpServerBat()/]
      [/file]
      
      [file (any.getClientJspProjectName().filename(any.getClientJspResourcesDir(), any.buildEmbeddedHttpStartupScriptName()), overwrite, 'UTF-8')]
        [any.clientEmbeddedHttpStartupBat()/]
      [/file]
    [/if]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientJspProjectName().filename('', 'pom.xml'), overwrite, 'UTF-8')]
        [any.clientJspPom()/]
      [/file]
    [/if]
    
    [if (any.useLog4J() and (fromStarter or any.hasToGenerateRootFiles()))]
      [file (any.getClientJspProjectName().filename(any.getClientJspResourcesDir(), 'log4j2.xml'), overwrite, 'UTF-8')]
        [any.log4j('jsp')/]
      [/file]
    [/if]
    
    [if (fromStarter)]
      [file (any.getClientJspProjectName().filename(any.getClientJspWebappDir(), 'index.jsp'), overwrite, 'UTF-8')]
        [any.clientJspIndex()/]
      [/file]
      
      [file (any.getClientJspProjectName().filename(any.getClientJspSourceDir(), any.getApplicationPackage(), any.buildJspDispatcherClassName() + '.java'), overwrite, 'UTF-8')]
        [any.clientJspDefaultDispatcher()/]
      [/file]
    [/if]
    
    [if (fromStarter or any.hasToGenerateRootFiles())]
      [file (any.getClientJspProjectName().filename(any.getClientJspWebDir(), 'web.xml'), overwrite, 'UTF-8')]
        [any.clientJspWebXml()/]
      [/file]
      
      [file (any.getClientJspProjectName().filename(any.getClientJspWebappDir(), 'css', 'style.css'), overwrite, 'UTF-8')]
        [any.clientJspCss()/]
      [/file]
      
      [file (any.getClientJspProjectName().filename(any.getClientJspSourceDir(), any.getApplicationPackage(), 'InitializationListener.java'), overwrite, 'UTF-8')]
        [any.clientInitialiseListener()/]
      [/file]
      
      [if ((fromStarter or any.hasToGenerateRootFiles()) and any.hasHttpEmbeddedServer())]
        [file (any.getClientJspProjectName().filename(any.getClientJspSourceDir(), any.getApplicationPackage(), any.buildBoostrapClassName() + '.java'), overwrite, 'UTF-8')]
          [any.httpServerBootstrap(false)/]
        [/file]
      [/if]
    [/if]
  [/if]
  
[/template]