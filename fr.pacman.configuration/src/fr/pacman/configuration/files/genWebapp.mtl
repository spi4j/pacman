[comment encoding = UTF-8 /]
[module genWebapp('http://www.eclipse.org/ocl/1.1.0/Ecore')/]

[import fr::pacman::commons::common::properties / ]
[import fr::pacman::commons::common::names /]
[import fr::pacman::commons::common::packages /]
[import fr::pacman::commons::common::classes /]
[import fr::pacman::commons::common::scripts /]

[import fr::pacman::configuration::project::Webapp/]
[import fr::pacman::configuration::common::properties/]
[import fr::pacman::configuration::project::Bootstrap /]
[import fr::pacman::configuration::common::listeners /]
[import fr::pacman::configuration::common::startupScripts /]

[template public genWebapp(any : OclAny, fromStarter : Boolean)]
[if ('swing'.equalsIgnoreCase(getClient()) or useWS()) and (fromStarter or any.hasToGenerateRootFiles())]
[comment : Creation du pom de xxx-webapp /]
[file (filename(getWebappProjectName(), '', 'pom.xml'), false, 'UTF-8')]
[webappPom() /]
[/file]
[comment : Creation du fichier web.xml /]
[file (filename(getWebappProjectName(), getWebappWebDir(), 'web.xml'), false, 'UTF-8')]
[webappWeb() /]
[/file]
[comment : Ajout d'une classe de boostrap dans le cas des serveurs embarques. /]
[comment : si client jsp/gwt/jsf, alors c'est le bootstrap du client qui prend la main. /]
[if hasHttpEmbeddedServer() and not hasClient()]
[file (filename(getWebappProjectName(), getWebappSourceDir(), getApplicationPackage(), buildBoostrapClassName() + '.java'), false, 'UTF-8')]
[httpServerBootstrap(true)/]
[/file]
[comment : Creation des scripts de démarrage pour les serveurs embarqués. /]
[comment : Si client, c'est le client qui prend la main au niveau des scripts de lancement. /]
[file (filename(getWebappProjectName(), getWebappResourceDir(), buildEmbeddedHttpScriptName()), false, 'UTF-8')]
[clientEmbeddedHttpServerBat()/]
[/file]
[file (filename(getWebappProjectName(), getWebappResourceDir(), buildEmbeddedHttpStartupScriptName()), false, 'UTF-8')]
[clientEmbeddedHttpStartupBat()/]
[/file]
[/if]
[comment : On rajoute le listener d'initialisation (dans tous les cas). /]
[file (filename(getWebappProjectName(), getWebappSourceDir(), getApplicationPackage(), 'InitializationListener.java'), false, 'UTF-8')]
[clientInitialiseListener() /]
[/file]
[/if]

[/template]

