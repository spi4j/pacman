[comment encoding = UTF-8 /]
[module genFileFacade('http://www.obeonetwork.org/dsl/environment/3.0.0',
                      'http://www.obeonetwork.org/dsl/soa/4.0.0')/]

[import fr::pacman::commons::common::utils /]

[import fr::pacman::commons::soa::common::utils /]
[import fr::pacman::commons::soa::files::genXto /]
[import fr::pacman::commons::soa::files::genXtoTest /]
[import fr::pacman::commons::soa::files::genRSResources /]

[import fr::pacman::soa::files::genUserMapper /]
[import fr::pacman::soa::common::outils /]
[import fr::pacman::soa::files::genService /]
[import fr::pacman::soa::files::genServiceItf /]
[import fr::pacman::soa::files::genServiceRequirements /]
[import fr::pacman::soa::files::genServiceTest /]
[import fr::pacman::soa::files::genUserBusiness /]
[import fr::pacman::soa::files::genUserMatching /]
[import fr::pacman::soa::files::genAppliMatchAbs /]
[import fr::pacman::soa::files::genAttributesEnum /]
[import fr::pacman::soa::files::genDto /]
[import fr::pacman::soa::files::genDtoTest /]
[import fr::pacman::soa::files::genFetchingStrategy /]
[import fr::pacman::soa::files::genMapper /]
[import fr::pacman::soa::files::genMapperItf /]
[import fr::pacman::soa::files::genMatch /]
[import fr::pacman::soa::files::genMatchItf /]
[import fr::pacman::soa::files::genPermissionsItf /]
[import fr::pacman::soa::files::genServiceCXF /]
[import fr::pacman::soa::files::genServiceCXFItf /]
[import fr::pacman::soa::files::genGwtModuleBusiness /]
[import fr::pacman::soa::files::genGwtModuleCommons /]
[import fr::pacman::soa::files::genGwtUserBusiness /]
[import fr::pacman::soa::files::genServiceGwtAsync /]
[import fr::pacman::soa::files::genServiceGwtImpl /]
[import fr::pacman::soa::files::genServiceGwtItf /]
[import fr::pacman::soa::files::genServiceGwtXml /]
[import fr::pacman::soa::files::genRSResources /]
[import fr::pacman::soa::files::genServiceRSItf /]
[import fr::pacman::soa::files::genServiceRS /]

[template public genGwtModuleBusiness_facade(n : Namespace)]
    [comment @main /]
    [if (n.eContainer().oclIsUndefined())]
    [genGwtModuleBusiness(n)/]
    [/if]
[/template]

[template public genGwtModuleCommons_facade(n : Namespace)]
    [comment @main /]
    [if (n.eContainer().oclIsUndefined())]
    [genGwtModuleCommons(n)/]
    [/if]
[/template]

[template public genGwtUserBusiness_facade(n : Namespace)]
    [comment @main /]
    [if (n.eContainer().oclIsUndefined())]
    [genGwtUserBusiness(n)/]
    [/if]
[/template]

[template public genServiceGwtXml_facade(n : Namespace)]
    [comment @main /]
    [if (n.eContainer().oclIsUndefined())]
    [genServiceGwtXml(n)/]
    [/if]
[/template]

[template public genServiceGwtItf_facade(d : DTO)]
    [comment @main /]
    [if not d.isNotPersistent()]
    [genServiceGwtItf(serviceFromDto(d), d)/]
    [/if]
[/template]

[template public genServiceGwtImpl_facade(d : DTO)]
    [comment @main /]
    [if not d.isNotPersistent()]
    [genServiceGwtImpl(serviceFromDto(d), d)/]
    [/if]
[/template]

[template public genServiceGwtAsync_facade(d : DTO)]
    [comment @main /]
    [if not d.isNotPersistent()]
    [genServiceGwtAsync(serviceFromDto(d), d)/]
    [/if]
[/template]

[template public genAppliMatchAbs_facade(n : Namespace)]
    [comment @main /]
    [genAppliMatchAbs(n)/]
[/template]

[template public genAttributesEnum_facade(d : DTO)]
    [comment @main /]
    [genAttributesEnum(d)/]
[/template]

[template public genDto_facade(d : DTO)]
    [comment @main /]
    [genDto(d)/]
[/template]

[template public genDtoTest_facade(d : DTO)]
    [comment @main /]
    [genDtoTest(d)/]
[/template]

[template public genFetchingStrategy_facade(d : DTO)]
    [comment @main /]
    [genFetchingStrategy(d)/]
[/template]

[template public genFetchingStrategyTest_facade(d : DTO)]
    [comment @main /]
    [genFetchingStrategy(d)/]
[/template]

[template public genMapper_facade(d : DTO)]
    [comment @main /]
    [genMapper(d)/]
[/template]

[template public genMapperItf_facade(d : DTO)]
    [comment @main /]
    [genMapperItf(d)/]
[/template]

[template public genMatch_facade(d : DTO)]
    [comment @main /]
    [genMatch(d)/]
[/template]

[template public genMatchItf_facade(d : DTO)]
    [comment @main /]
    [genMatchItf(d)/]
[/template]

[template public genPermissionsItf_facade(m : System)]
    [comment @main /]
    [genPermissionsItf(m)/]
[/template]

[template public genService_facade(d : DTO)]
    [comment @main /]
    [if not d.isNotPersistent()]
    [genService(serviceFromDto(d), d)/]
    [/if]
[/template]

[template public genServiceCXFFacade_facade(s : Service)]
    [comment @main /]
    [genServiceCXF(s)/]
[/template]

[template public genServiceCXFFacadeItf_facade(s : Service)]
    [comment @main /]
    [genServiceCXFItf(s)/]
[/template]

[template public genServiceItf_facade(d : DTO)]
    [comment @main /]
    [genServiceItf(serviceFromDto(d), d)/]
[/template]

[template public genServiceRequirements_facade(d : DTO)]
    [comment @main /]
    [genServiceRequirements(serviceFromDto(d), d)/]
[/template]

[template public genServiceTest_facade(d : DTO)]
    [comment @main /]
    [genServiceTest(serviceFromDto(d), d)/]
[/template]

[template public genUserBusiness_facade(m : System)]
    [comment @main /]
    [genUserBusiness(m)/]
[/template]

[template public genUserMapper_facade(m : System)]
    [comment @main /]
    [genUserMapper(xtoAGenerer(m), m)/]
[/template]

[template public genUserMatching_facade(m : System)]
    [comment @main /]
    [genUserMatching(m)/]
[/template]

[template public genXto_facade(d : DTO)]
    [comment @main /]
    [genXto(d)/]
[/template]

[template public genXtoTest_facade(d : DTO)]
    [comment @main /]
    [genXtoTest(d)/]
[/template]

[template public genApplicationAppConfig_facade (m : System)]
	[comment @main /]
	[genRSApplicationConfig(m)/]
[/template]

[template public genGradesResources_facade (s : Service)]
	[comment @main /]
	[s.genRSResource(null)/]
[/template]

[template public genGradesServiceRSFacadeItf_facade (s : Service)]
	[comment @main /]
	[genServiceRSItf(s, null)/]
[/template]

[template public genGradesServiceRSFacade_facade (s : Service) ]
	[comment @main /]
	[s.genServiceRS(null)/]
[/template]
