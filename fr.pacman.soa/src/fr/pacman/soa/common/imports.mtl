[module imports('http://www.obeonetwork.org/dsl/soa/4.0.0', 'http://www.obeonetwork.org/dsl/environment/3.0.0', 'http://www.obeonetwork.org/dsl/requirement/1.0')/]

[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::packages/]
[import fr::pacman::commons::common::names/]
[import fr::pacman::commons::soa::common::packages/]
[import fr::pacman::commons::soa::common::classes/]
[import fr::pacman::soa::common::classes/]
[import fr::pacman::soa::common::name/]
[import fr::pacman::soa::common::packages/]
[import fr::pacman::commons::convention::rule::classRule/]

[comment encoding = UTF-8 /]
[template public buildImportUserBusinessGen(any : ecore::EObject)]
  [any.buildPackageBusiness()/].[any.buildAppliUserBusinessGenClassName()/][/template]

[template public buildImportDto(d : environment::DTO)]
  [d.buildPackageBusinessApiDto()/].[d.buildDtoClassName()/][/template]

[template public buildImportXto(d : environment::DTO)]
  [d.buildPackageWsApiDto()/].[d.buildXtoClassNameFromDto()/][/template]

[template public buildImportXtoGwt(d : environment::DTO)]
  [d.buildPackageWsApiDto()/].[d.buildXtoClassNameFromDto()/][/template]

[template public buildImportServiceInterface(s : soa::Service, d : environment::DTO)]
  [s.buildPackageBusinessApiServiceDto(d)/].[s.buildServiceInterfaceName(d)/][/template]

[template public buildImportServiceRequirements(s : soa::Service, d : environment::DTO)]
  [s.buildPackageBusinessImplementationServiceDto(d)/].[s.buildServiceRequirementsClassName(d)/][/template]

[template public buildImportRequirement(req : requirement::Requirement)]
  [if (req.requirementBaseCategoryLevel() = 0)]
    import [req.buildPackageRequirement()/].['requirement'.apply_classAnnotation()/];
    import [req.buildPackageRequirement()/].['requirement'.apply_classEnum()/];
  [else]
    import [req.getBaseCategoryForRequirement().buildPackageRequirementForCategory()/].['requirement ' + req.getBaseCategoryForRequirement().id.apply_classAnnotation()/];
    import [req.getBaseCategoryForRequirement().buildPackageRequirementForCategory()/].['requirement ' + req.getBaseCategoryForRequirement().id.apply_classEnum()/];
  [/if]
[/template]

[template public buildImportServiceInterface(d : environment::DTO)]
  [null.buildPackageBusinessApiServiceDto(d)/].[null.buildServiceInterfaceName(d)/][/template]

[template public buildImportAttributesEnum(d : environment::DTO)]
  [d.buildPackageBusinessApiDto()/].[d.buildAttributesEnumName()/][/template]

[template public buildImportMatching(d : environment::DTO)]
  [d.buildPackageMatchingInterfaceDto()/].[d.buildAppliMatchClassName()/][/template]

[template public buildImportMatchingInterface(d : environment::DTO)]
  [d.buildPackageMatchingInterfaceDto()/].[d.buildAppliMatchInterfaceName()/][/template]

[template public buildImportEnum(d : environment::DTO)]
  [d.buildPackagePersistenceApiDto()/].[d.buildEntityColumnEnumName()/][/template]

[comment todo: vérifier que ce n'est appelé que quand on a implicitement 1 entity - 1 dto/]
[template public buildImportDaoInterface(d : environment::DTO)]
  [d.buildPackagePersistenceApiDto()/].[d.buildDaoInterfaceName()/][/template]

[comment todo: vérifier que ce n'est appelé que quand on a implicitement 1 entity - 1 dto/]
[template public buildImportEntityInterface(d : environment::DTO)]
  [d.buildPackagePersistenceApiDto()/].[d.buildEntityInterfaceName()/][/template]

[comment todo: vérifier que ce n'est appelé que quand on a implicitement 1 entity - 1 dto/]
[template public buildImportColumnsEnum(d : environment::DTO)]
  [d.buildPackagePersistenceApiDto()/].[d.buildEntityColumnEnumName()/][/template]

[comment : GWT /]
[template public buildImportServiceInterfaceGwt(s : soa::Service, d : environment::DTO)]
  [s.buildPackageBusinessGwtClientServiceDto(d)/].[s.buildServiceGwtInterfaceName(d)/][/template]

[template public buildImportServiceInterfaceGwtAsync(s : soa::Service, d : environment::DTO)]
  [s.buildPackageBusinessGwtClientServiceDto(d)/].[s.buildServiceGwtAsyncClassName(d)/][/template]