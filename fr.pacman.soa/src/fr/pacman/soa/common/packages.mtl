[module packages('http://www.obeonetwork.org/dsl/soa/4.0.0', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::utils/]
[import fr::pacman::commons::common::packages/]
[import fr::pacman::commons::soa::common::packages/]
[import fr::pacman::soa::common::classes/]
[import fr::pacman::soa::common::name/]

[comment encoding = UTF-8 /]
[**
 * ****************
 * Paramétrage Début
*/]
[query public buildPackagePersistenceApiDto(d : environment::DTO) : String = d.buildPackagePersistenceApi() + d.categoryHierarchy()/]

[query public buildPackageBusinessImplementationServiceDto(s : soa::Service, d : environment::DTO) : String = if not (s = null) then s.buildPackageImplBusiness() + '.' + s.nameComponent() else if not (d = null) then d.buildPackageImplBusiness() + d.categoryHierarchy() else 'PACKAGE NOT FOUND FOR SERVICE AND DTO NULL' endif endif/]

[query public buildPackageMatchingInterfaceDto(d : environment::DTO) : String = d.buildPackageMatching() + d.categoryHierarchy()/]

[query public buildPackageFetchingStrategyDto(d : environment::DTO) : String = d.buildPackageBusinessApi() + d.categoryHierarchy() + '.fetching'/]

[query public buildPackageBusinessGwtClient(any : ecore::EObject) : String = any.buildPackageGwtClient() + '.' + any.getPackageBusiness()/]

[query public buildPackageMapperDto(d : environment::DTO) : String = d.buildPackageMapper() + d.categoryHierarchy()/]

[query public buildPackageBusinessGwtClientServiceDto(s : soa::Service, d : environment::DTO) : String = if not (s = null) then s.buildPackageBusinessGwtClient() + '.' + s.nameComponent() else if not (d = null) then d.buildPackageBusinessGwtClientDto() else 'PACKAGE NOT FOUND FOR SERVICE AND DTO NULL' endif endif/]

[query public buildPackageBusinessGwtServerServiceDto(s : soa::Service, d : environment::DTO) : String = if not (s = null) then s.buildPackageBusinessGwtServer() + '.' + s.nameComponent() else if not (d = null) then d.buildPackageBusinessGwtServerDto() else 'PACKAGE NOT FOUND FOR SERVICE AND DTO NULL' endif endif/]

[query public buildPackageBusinessGwtClientDto(d : environment::DTO) : String = d.buildPackageBusinessGwtClient() + d.categoryHierarchy()/]

[query private buildPackageBusinessGwtServer(any : ecore::EObject) : String = any.buildPackageGwtServer() + '.' + any.getPackageBusiness()/]

[query private buildPackageGwtClient(any : ecore::EObject) : String = any.getApplicationPackage() + '.client'/]

[query private buildPackageGwtServer(any : ecore::EObject) : String = any.getApplicationPackage() + '.server'/]

[query public buildPackageBusinessGwtServerDto(d : environment::DTO) : String = d.buildPackageBusinessGwtServer() + d.categoryHierarchy()/]

[query public buildPackageBusinessApiServiceDto(s : soa::Service, d : environment::DTO) : String = if not (s = null) then s.buildPackageBusinessApi() + '.' + s.nameComponent() else if not (d = null) then d.buildPackageBusinessApiDto() else 'PACKAGE NOT FOUND FOR SERVICE AND DTO NULL' endif endif/]

[comment fin packages /]
[**
 * ****************
 * Paramétrage fin
*/]
[comment transforme un nom de package en uri, ex : fr.pacman -> pacman.fr /]
[query public packageToUri(s : String) : String = s.tokenize('.')->reverse()->sep('.')->toString()/]