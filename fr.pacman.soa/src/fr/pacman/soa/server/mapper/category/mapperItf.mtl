[module mapperItf('http://www.obeonetwork.org/dsl/soa/4.0.0', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::licence/]
[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::names/]
[import fr::pacman::commons::common::imports/]
[import fr::pacman::commons::soa::common::packages/]
[import fr::pacman::commons::soa::common::names/]
[import fr::pacman::soa::common::packages/]
[import fr::pacman::soa::common::name/]
[import fr::pacman::soa::common::classes/]
[import fr::pacman::commons::convention::project::surcouche/]

[comment encoding = UTF-8 /]
[template public mapperItf(d : environment::DTO)]
  [d.licence()/]
  package [d.buildPackageMapperDto()/];
  [protected ('for imports') startTagPrefix('// ') endTagPrefix('// ')]
    
    [d.writeImports()/]
    
  [/protected]
  
  /**
   * L'interface d√©finissant le contrat pour le Mapper (= Dto <-> Xto) sur le type '[d.nameClassDto()/]'.
   * @author [d.getAuthorName()/]
   */
  public interface [d.buildMapperInterfaceName()/] extends [d.getClassNameForMapper_Itf()/]<[d.buildDtoClassName()/], [d.buildXtoClassNameFromDto()/]>
  {
  
     [d.nameMapperInterface().displayClearUserCodeId()/]
     [protected (d.getUserCodeId(d.nameMapperInterface())) startTagPrefix('// ') endTagPrefix('// ')]

     [/protected]
  
  }[/template]

[comment : Write all required imports. /]
[template private writeImports(d : environment::DTO) post(self.trim())]
  [d.initImports()/]
  [d.addImport(d.getImportForMapper_Itf())/]
  [d.addImport(d.buildPackageBusinessApiDto() + '.' + d.buildDtoClassName())/]
  [d.addImport(d.buildPackageWsApiDto() + '.' + d.buildXtoClassNameFromDto())/]
  [d.flushImports()/][/template]
