[module generateEntityJdbcSoaLight('http://www.obeonetwork.org/dsl/entity/3.0.0', 'http://www.obeonetwork.org/dsl/entity/2.0.0/utilities', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::utils/]
[import fr::pacman::commons::common::properties/]
[import fr::pacman::entity::api::sql::common/]
[import fr::pacman::entity::api::common::attributes/]
[import fr::pacman::entity::api::common::xtoutils/]
[import fr::pacman::entity::api::common::serviceutils/]
[import fr::pacman::entity::api::files::genDaoTest/]
[import fr::pacman::entity::api::files::genMapperItf/]
[import fr::pacman::entity::api::files::genMapper/]
[import fr::pacman::entity::api::files::genUserMapper/]
[import fr::pacman::entity::api::files::genH2DatabaseHelper/]
[import fr::pacman::entity::jdbc::files::genService/]
[import fr::pacman::entity::jdbc::files::genServiceTest/]
[import fr::pacman::entity::jdbc::files::genAppliEntityAbs/]
[import fr::pacman::entity::jdbc::files::genLog4j/]
[import fr::pacman::entity::jdbc::files::genDao/]
[import fr::pacman::entity::jdbc::files::genDaoJdbcTest/]
[import fr::pacman::entity::jdbc::files::genServiceRequirements/]
[import fr::pacman::entity::jdbc::files::genEntity/]
[import fr::pacman::entity::jdbc::files::genParamPersistence/]

[comment encoding = UTF-8 /]
[comment import fr::pacman::cinematic::crud::generateCinematicCrud /]
[comment @main/]
[template public implementation(r : entity::Root)]
  [r.genParamPersistence()/]
  [r.genH2DatabaseHelper()/]
  [if (r.clientNeedXto() or r.useWS())]
    	[r.genUserMapper()/]
  [/if]
  [if (r.useLog4J())]
        [r.genLog4j('server')/]
  [/if]
  [for (entity : entity::Entity | r.eAllContents(entity::Entity))]
    [if (not entity.isNotPersistent())]
       	[entity.genDao()/]
      	[entity.genDaoTest()/]
      [if (entity.isReferentiel())]
               [entity.genDaoJdbcTest()/]
      [/if]
    [/if]
    [if (entity.clientNeedXto() or entity.useWS())]
      		[entity.genMapperItf()/]
      		[entity.genMapper()/]
    [/if]
    	[entity.genService()/]
    [if (entity.useServiceRequirements())]
               [entity.genServiceRequirements()/]
    [/if]
    		[entity.genServiceTest()/]
  [/for]
[/template]

[comment @main/]
[template public implementationBlock(b : environment::Namespace)]
  [for (entity : entity::Entity | b.eAllContents(entity::Entity))]
    [if (entity.clientNeedXto() or entity.useWS())]
      			[entity.genMapperItf()/]
      			[entity.genMapper()/]
    [/if]
    		[entity.genService()/]
    [if (not entity.isNotPersistent())]
       			[entity.genDao()/]
      			[entity.genDaoTest()/]
      [if (entity.isReferentiel())]
                		[entity.genDaoJdbcTest()/]
      [/if]
    [/if]
    		[entity.genServiceTest()/]
  [/for]
[/template]

[comment @main/]
[template public implementationEntity(entity : entity::Entity)]
  [if (entity.clientNeedXto() or entity.useWS())]
    			[entity.genMapperItf()/]
    			[entity.genMapper()/]
  [/if]
  		[entity.genService()/]
  [if (not entity.isNotPersistent())]
     			[entity.genDao()/]
    			[entity.genDaoTest()/]
    [if (entity.isReferentiel())]
              		[entity.genDaoJdbcTest()/]
    [/if]
  [/if]
  		[entity.genServiceTest()/][/template]