[comment encoding = UTF-8 /]
[module generateEntityJdbcSoaLight('http://www.obeonetwork.org/dsl/entity/3.0.0','http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[comment import fr::pacman::cinematic::crud::generateCinematicCrud /]
[import fr::pacman::commons::common::classes /]
[import fr::pacman::commons::common::utils /]
[import fr::pacman::commons::common::properties /]

[import fr::pacman::entity::api::sql::common /]
[import fr::pacman::entity::api::common::attributes /]
[import fr::pacman::entity::api::common::xtoutils /]
[import fr::pacman::entity::api::common::serviceutils /]
[import fr::pacman::entity::api::files::genDaoTest /]
[import fr::pacman::entity::api::files::genMapperItf /]
[import fr::pacman::entity::api::files::genMapper /]
[import fr::pacman::entity::api::files::genUserMapper /]
[import fr::pacman::entity::api::files::genH2DatabaseHelper /]

[import fr::pacman::entity::jdbc::files::genService /]
[import fr::pacman::entity::jdbc::files::genServiceTest /]
[import fr::pacman::entity::jdbc::files::genAppliEntityAbs /]
[import fr::pacman::entity::jdbc::files::genLog4j /]
[import fr::pacman::entity::jdbc::files::genDao /]
[import fr::pacman::entity::jdbc::files::genDaoJdbcTest /]
[import fr::pacman::entity::jdbc::files::genServiceRequirements /]
[import fr::pacman::entity::jdbc::files::genEntity /]
[import fr::pacman::entity::jdbc::files::genParamPersistence /]


[template public implementation(r : Root)]
[comment @main /]
[genParamPersistence(r)/]
[genH2DatabaseHelper(r)/]
[if clientNeedXto()  or useWS() ]
	[genUserMapper(r)/]
[/if]
[if (useLog4J())]
    [genLog4j(r, 'server')/]
[/if]
[comment : agglom√©ration des mains /]
[for (entity : Entity | r.eAllContents(Entity))]
[if not entity.isNotPersistent()]
 	[genDao(entity)/]
	[genDaoTest(entity)/]
    [if entity.isReferentiel()]
       [genDaoJdbcTest(entity)/]
    [/if]
[/if]
	[if clientNeedXto()  or useWS() ]
		[genMapperItf(entity)/]
		[genMapper(entity)/]
	[/if]
	[genService(entity)/]
	[if useServiceRequirements()]
         [genServiceRequirements(entity)/]
	[/if]
		[genServiceTest(entity)/]
[/for]
[comment generateCinematicCrud(r)/]
[/template]

[template public implementationBlock(b : Namespace)]
[comment @main /]
[for (entity : Entity | b.eAllContents(Entity))]
    	[comment genEntity(entity)/]
		[if clientNeedXto()  or useWS() ]
			[genMapperItf(entity)/]
			[genMapper(entity)/]
		[/if]
		[genService(entity)/]
		[if not entity.isNotPersistent()]
 			[genDao(entity)/]
			[genDaoTest(entity)/]
    		[if entity.isReferentiel()]
        		[genDaoJdbcTest(entity)/]
    		[/if]
		[/if]
		[genServiceTest(entity)/]
[/for]
[/template]

[template public implementationEntity(entity : Entity)]
[comment @main /]
    	[comment genEntity(entity)/]
		[if clientNeedXto()  or useWS() ]
			[genMapperItf(entity)/]
			[genMapper(entity)/]
		[/if]
		[genService(entity)/]
		[if not entity.isNotPersistent()]
 			[genDao(entity)/]
			[genDaoTest(entity)/]
    		[if entity.isReferentiel()]
        		[genDaoJdbcTest(entity)/]
    		[/if]
		[/if]
		[genServiceTest(entity)/]
[/template]
