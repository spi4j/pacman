[module initializelistener('http://www.obeonetwork.org/dsl/cinematic/3.0.0', 'http://www.obeonetwork.org/dsl/cinematic/view/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/flow/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/toolkits/1.0.0', 'http://www.obeonetwork.org/dsl/environment/3.0.0')/]

[import fr::pacman::commons::common::licence/]
[import fr::pacman::commons::common::packages/]
[import fr::pacman::commons::common::names/]
[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::imports/]

[comment encoding = UTF-8 /]
[template public initializelistener(root : cinematic::CinematicRoot)]
  [root.licence()/]
  package [root.getApplicationPackage()/];
  
  import jakarta.servlet.ServletContextEvent;
  import jakarta.servlet.ServletContextListener;
  
  import [root.getApplicationPackage()/].persistence.[root.buildParamPersistenceClassName()/];
  import fr.spi4j.Parameters;
  import fr.spi4j.filter.TransactionFilter;
  import fr.spi4j.persistence.TransactionInterceptor;
  
  /**
   * Classe permettant de faire des initialisations compl√©mentaires lors de l'initialisation de la webapp.
   */
  public class InitializationListener implements ServletContextListener
  {
     @Override
     public void contextInitialized (final ServletContextEvent p_event)
     {
  		['Context initialized'.displayClearUserCodeId()/]
  	  	[protected (root.getUserCodeId('context initialized')) startTagPrefix('// ') endTagPrefix('// ')]
        
              	Parameters.initServletContext(p_event.getServletContext());
        
              	TransactionInterceptor.initUserPersistence([root.buildParamPersistenceClassName()/].getUserPersistence());
              	TransactionFilter.initUserPersistence([root.buildParamPersistenceClassName()/].getUserPersistence());
        
      [/protected]
  
     }
  
     @Override
     public void contextDestroyed (final ServletContextEvent p_event)
     {
  		['Context destroyed'.displayClearUserCodeId()/]
  	  	[protected (root.getUserCodeId('context destroyed')) startTagPrefix('// ') endTagPrefix('// ')]
        
      [/protected]
  
     }
     
     ['Methodes'.displayClearUserCodeId()/]
     [protected (root.getUserCodeId('Methodes')) startTagPrefix('// ') endTagPrefix('// ')]
       
     [/protected]
  
  
  }
[/template]
