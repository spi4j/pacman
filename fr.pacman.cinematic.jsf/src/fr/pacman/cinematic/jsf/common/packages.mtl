[module packages('http://www.obeonetwork.org/dsl/cinematic/3.0.0', 'http://www.obeonetwork.org/dsl/cinematic/view/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/flow/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/toolkits/1.0.0')/]

[import fr::pacman::commons::common::packages/]
[import fr::pacman::commons::common::properties/]
[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::utils/]
[import fr::pacman::cinematic::api::common::packages/]
[import fr::pacman::cinematic::jsf::common::jsf_commons/]
[import fr::pacman::cinematic::jsf::common::name/]

[comment encoding = UTF-8 /]
[query public namePackageJsf(any : ecore::EObject) : String = any.namePackageClient() + '.jsf'/]

[query public namePackageViewContainerImplementation(viewContainer : view::ViewContainer) : String = viewContainer.namePackageJsf() + viewContainer.packageHierarchy()/]

[query public namePackagePagesContainer(viewContainer : view::ViewContainer) : String = viewContainer.packageHierarchy()/]

[query public namePackagePagesContainerWithoutDot(any : ecore::EObject) : String = if any = null or any.ancestors(cinematic::Package)->isEmpty() then '' else any.ancestors(cinematic::Package)->collect(temp1 | temp1.name)->collect(temp2 | temp2.sanitize())->collect(temp3 | temp3.toLower())->reverse()->sep('.')->toString() endif/]

[**
 * The documentation of the template genFullQualifiedFileName.
 * @param aViewState
*/]
[template public genFullQualifiedFileName(viewContainer : view::ViewContainer)]
  /src/main/webapp/pages/[viewContainer.namePackagePagesContainer()/][if (viewContainer.ancestors(cinematic::Package)->notEmpty())]/[/if][viewContainer.nameViewImplementation()/].xhtml[/template]

[template public genFullQualifiedFileNameWithoutDot(viewContainer : view::ViewContainer)]
  [viewContainer.genPackage().replace('//', '/')/][/template]

[query private genPackage(viewContainer : view::ViewContainer) : String = '/pages' + viewContainer.namePackagePagesContainer().replace('.', '/') + '/' + viewContainer.nameViewImplementation() + '.xhtml'/]

[query private orderWidgets(widgets : OrderedSet(toolkits::Widget)) : OrderedSet(toolkits::Widget) = widgets->sortedBy(w | w.widgetComparator())/]

[query private widgetComparator(widget : toolkits::Widget) : String = if widget = null or widget.name = null then '' else widget.name endif/]

[query public namePackageContainerBean(viewContainer : view::ViewContainer) : String = viewContainer.namePackageBean() + viewContainer.packageHierarchy()/]

[query public nameCommonPackage(any : ecore::EObject) : String = any.namePackageBean() + '.common'/]

[query public importAbstractBean(any : ecore::EObject) : String = any.namePackageBean() + '.' + any.buildJsfBeanAbstractName()/]

[query public importViewMode(any : ecore::EObject) : String = any.getApplicationPackage() + '.ViewMode'/]

[query public namePackageBean(any : ecore::EObject) : String = any.getApplicationPackage() + '.beans'/]

[query public namePackageCommon(any : ecore::EObject) : String = any.getApplicationPackage() + '.common'/]

[query public GetClient(any : ecore::EObject) : String = any.getClient()/]
