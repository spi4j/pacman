[**
 * The documentation of the module generate.
 */]
[module common('http://www.obeonetwork.org/dsl/cinematic/3.0.0', 'http://www.obeonetwork.org/dsl/cinematic/view/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/flow/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/toolkits/1.0.0')/]

[comment encoding = UTF-8 /]
[template public genFullQualifiedFileName(aFS : flow::FlowState)]
  //TODO handle [aFS.eClass().name/][/template]

[**
 * The documentation of the template genFullQualifiedFileName.
 * @param aViewState
*/]
[template public genFullQualifiedFileName(aViewState : flow::ViewState)]
  /src/main/webapp/pages/[aViewState.eContainer(cinematic::CinematicRoot).name/]/[aViewState.ancestors(cinematic::Package)->reverse()->collect(temp1 | temp1.name)->sep('/')/][if (aViewState.ancestors(cinematic::Package)->notEmpty())]/[/if][aViewState.eContainer(flow::Flow).name/]/[aViewState.name/].xhtml[/template]

[**
 * The documentation of the template genFullQualifiedFileName.
 * @param aViewState
 * @param aEvent
*/]
[template public genFullQualifiedFileName(aViewState : flow::ViewState, aEvent : cinematic::Event)]
  /src/main/webapp/pages/[aViewState.eContainer(cinematic::CinematicRoot).name/]/[aViewState.ancestors(cinematic::Package)->reverse()->collect(temp2 | temp2.name)->sep('/')/][if (aViewState.ancestors(cinematic::Package)->notEmpty())]/[/if][aViewState.eContainer(flow::Flow).name/]/MultipleTransitions/[aViewState.name/][aEvent.name/].html[/template]

[**
 * The documentation of the template genRelativeName.
 * @param aViewState
*/]
[template public getRootContainerPath(aFS : flow::FlowState)]
  //TODO handle [aFS.eClass().name/][/template]

[template public getRootContainerPath(aViewState : flow::ViewState)]
  ['../../' + aViewState.genPackageRelativePath() + '../'/][/template]

[template public getRootContainerPath(aViewState : flow::ViewState, aEvent : cinematic::Event)]
  ['../../' + aViewState.genPackageRelativePath() + '../../'/][/template]

[template public getRootContainerPath(aActionState : flow::ActionState)]
  ['../../' + aActionState.genPackageRelativePath() + '../../'/][/template]

[template public genPackageRelativePath(aNFS : flow::NamedFlowState)]
  [for (it : cinematic::Package | aNFS.ancestors(cinematic::Package))]../[/for][/template]

[template public getLabel(anAVE : view::AbstractViewElement) post(self.trim())]
  [if (not (anAVE.label = null) and anAVE.label.size() > 0)][anAVE.label/][else][anAVE.name/][/if]
[/template]

[template public getLabel(viewContainer : view::ViewContainer) post(self.trim())]
  [if (not (viewContainer.label = null) and viewContainer.label.size() > 0)][viewContainer.label/][else][viewContainer.name/][/if]
[/template]

[template public getName(aFS : flow::FlowState) post(self.trim())]
  //TODO handle [aFS.eClass().name/][/template]

[template public getName(aViewState : flow::ViewState) post(self.trim())]
  [aViewState.name/][/template]

[template public getName(aActionState : flow::ActionState) post(self.trim())]
  [aActionState.name/][/template]
