[module generateCinematicSwing('http://www.obeonetwork.org/dsl/cinematic/3.0.0', 'http://www.obeonetwork.org/dsl/cinematic/view/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/flow/1.0.0', 'http://www.obeonetwork.org/dsl/cinematic/toolkits/1.0.0')/]

[import fr::pacman::commons::common::classes/]
[import fr::pacman::commons::common::properties/]
[import fr::pacman::cinematic::swing::files::genSwingLanceur/]
[import fr::pacman::cinematic::swing::files::genSwingViews/]
[import fr::pacman::cinematic::swing::files::genPresenter/]
[import fr::pacman::cinematic::swing::files::genSecurity/]
[import fr::pacman::cinematic::swing::files::genViewImplementation/]
[import fr::pacman::cinematic::swing::files::genFlowManager/]
[import fr::pacman::cinematic::api::common::model/]
[import fr::pacman::cinematic::swing::common::name/]

[comment encoding = UTF-8 /]
[comment @main/]
[template public generate(root : cinematic::CinematicRoot)]
  [for (clientType : String | root.getClientTypes())]
    [if (clientType.equalsIgnoreCase('SWING'))]
      
      [root.genSwingViews(root.eAllContents(view::ViewContainer)->sortedBy(temp1 | temp1.name))/]
      [root.genSwingLanceur()/]
      
      [for (viewContainer : view::ViewContainer | root.eAllContents(view::ViewContainer))]
        [viewContainer.genPresenter()/]
        [viewContainer.genViewImplementation()/]
      [/for]
      
      [for (flow : flow::Flow | root.eAllContents(flow::Flow))]
        [flow.genFlowManager()/]
      [/for]
      
      [if (clientType.useSpi4jSecurity())]
        [root.genSecurity()/]
      [/if]
    [/if]
  [/for]
[/template]