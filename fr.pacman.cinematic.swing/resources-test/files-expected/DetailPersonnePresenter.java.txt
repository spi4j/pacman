package fr.appwhite1.client.ui.annuaire;

// Start of user code for imports

import fr.spi4j.ui.graal.UserAction;
import fr.spi4j.ui.mvp.Presenter_Abs;
import fr.spi4j.ui.mvp.View_Itf;

import fr.appwhite1.client.ui.annuaire.ListePersonnesPresenter;
import fr.appwhite1.client.ui.annuaire.ListePersonnesPresenter;

// End of user code

/**
 * Presenter.
 * @author Pacman
 */
// Start of user code Class definition
public class DetailPersonnePresenter extends Presenter_Abs<DetailPersonneView_Itf, Object>
// End of user code
{

   // Start of user code Constructeur(s)
   /**
    * Constructeur.
    */
   public DetailPersonnePresenter ()
   {
      super(null);
   }

   /**
    * Constructeur avec présenteur parent.
    * @param p_parent
    *           le présenteur parent
    */
   public DetailPersonnePresenter (final Presenter_Abs<? extends View_Itf, ?> p_parent)
   {
      super(p_parent);
   }

   // End of user code

   @Override
   public void initView ()
   {
      // Start of user code Initialisation de la vue

      // End of user code
   }

   @Override
   protected String doGenerateTitle ()
   {
      // Start of user code Titre de l'écran
      return "DetailPersonne";
      // End of user code
   }

   /**
    * Gestion de l'événément annuler.
    */
   @UserAction(UserAction.c_BOUTON + "annuler")
   public void annuler ()
   {
      // Start of user code Pre annuler
      // End of user code

      // Start of user code annuler : Action ListerPersonnes
      // TODO ListerPersonnes
      // End of user code

      // Start of user code annuler : Affichage de ListePersonnes
      ListePersonnesPresenter v_listePersonnesPresenter = getViewManager().getPresenter(ListePersonnesPresenter.class);
      if (v_listePersonnesPresenter == null)
      {
         v_listePersonnesPresenter = new ListePersonnesPresenter(this);
         getView().addView(v_listePersonnesPresenter.getView());
      }
      else
      {
         getView().restoreView(v_listePersonnesPresenter.getView());
      }

      // End of user code

      // Start of user code Post annuler

      // End of user code
   }

   /**
    * Gestion de l'événément enregistrer.
    */
   @UserAction(UserAction.c_BOUTON + "enregistrer")
   public void enregistrer ()
   {
      // Start of user code Pre enregistrer
      // End of user code

      // Start of user code enregistrer : Action Enregistrer
      // TODO Enregistrer
      // End of user code

      // Start of user code enregistrer : Action ListerPersonnes
      // TODO ListerPersonnes
      // End of user code

      // Start of user code enregistrer : Affichage de ListePersonnes
      ListePersonnesPresenter v_listePersonnesPresenter = getViewManager().getPresenter(ListePersonnesPresenter.class);
      if (v_listePersonnesPresenter == null)
      {
         v_listePersonnesPresenter = new ListePersonnesPresenter(this);
         getView().addView(v_listePersonnesPresenter.getView());
      }
      else
      {
         getView().restoreView(v_listePersonnesPresenter.getView());
      }

      // End of user code

      // Start of user code Post enregistrer

      // End of user code
   }

   // Start of user code DetailPersonnePresenter

   // End of user code

}
