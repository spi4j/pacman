package fr.appwhite1.client.ui.swing.annuaire;

// Start of user code for imports

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;

import fr.spi4j.ui.mvp.View_Itf;
import fr.spi4j.ui.swing.SpiFrame;
import fr.spi4j.ui.swing.SpiPanel;
import fr.spi4j.ui.swing.SpiSwingUtilities;
import fr.spi4j.ui.swing.SpiViewPanel;

import fr.appwhite1.client.ui.annuaire.DetailPersonneView_Itf;
import fr.appwhite1.client.ui.annuaire.DetailPersonnePresenter;

import fr.spi4j.ui.HasString_Itf;


import fr.spi4j.ui.swing.SpiButton;



// End of user code

/**
 * Screen DetailPersonneViewSwing.
 * @author Pacman
 */
public class DetailPersonneViewSwing extends SpiViewPanel<DetailPersonnePresenter> implements DetailPersonneView_Itf
{

   private static final long serialVersionUID = 1L;

   // Start of user code Déclaration btAnnuler_SpiButton

   private final SpiButton _btAnnuler;

   // End of user code

   // Start of user code Déclaration btEnregistrer_SpiButton

   private final SpiButton _btEnregistrer;

   // End of user code


   // initialisation des composants

   // Start of user code Paramétrage btAnnuler_SpiButton
   private transient final ActionListener _btAnnulerAction = new ActionListener()
   {
      @Override
      public void actionPerformed (final ActionEvent p_event)
      {
         getPresenter().annuler();
      }
   };
   // End of user code
   // Start of user code Paramétrage btEnregistrer_SpiButton
   private transient final ActionListener _btEnregistrerAction = new ActionListener()
   {
      @Override
      public void actionPerformed (final ActionEvent p_event)
      {
         getPresenter().enregistrer();
      }
   };
   // End of user code

   /**
    * Constructeur.
    * @param p_presenter
    *           le présenteur
    */
   public DetailPersonneViewSwing (final DetailPersonnePresenter p_presenter)
   {
      super(p_presenter);
      // Start of user code initialize
      final SpiPanel v_buttonsPanel = new SpiPanel(new GridLayout(2, 1));
      _btAnnuler = new SpiButton("btAnnuler");
      _btAnnuler.addActionListener(_btAnnulerAction);
      v_buttonsPanel.add(_btAnnuler);
      _btEnregistrer = new SpiButton("btEnregistrer");
      _btEnregistrer.addActionListener(_btEnregistrerAction);
      v_buttonsPanel.add(_btEnregistrer);

      setLayout(new BorderLayout());
      setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));
      SwingUtilities.invokeLater(new Runnable()
      {
         @Override
         public void run ()
         {
            SpiSwingUtilities.getAncestorOfClass(JFrame.class, DetailPersonneViewSwing.this).setDefaultCloseOperation(
                     WindowConstants.DISPOSE_ON_CLOSE);
         }
      });
      add(v_buttonsPanel, BorderLayout.CENTER);
      // End of user code
   }

   @Override
   public void addView (final View_Itf p_view)
   {
      // Start of user code addView
      if (p_view instanceof SpiViewPanel)
      {
         SpiFrame.open((SpiViewPanel<?>) p_view);
      }
      else
      {
         throw new UnsupportedOperationException("Vue inconnue : " + p_view.getClass().getName());
      }
      // End of user code
   }

   @Override
   public void restoreView (final View_Itf p_view)
   {
      // Start of user code restoreView
      if (p_view instanceof SpiViewPanel)
      {
         final SpiFrame v_frame = SpiSwingUtilities.getAncestorOfClass(SpiFrame.class, (SpiViewPanel<?>) p_view);
         v_frame.toFront();
      }
      else
      {
         throw new UnsupportedOperationException("Vue inconnue : " + p_view.getClass().getName());
      }
      // End of user code
   }

   @Override
   public void removeView (final View_Itf p_view)
   {
      // Start of user code removeView
      if (p_view instanceof SpiViewPanel)
      {
         final SpiFrame v_frame = SpiSwingUtilities.getAncestorOfClass(SpiFrame.class, (SpiViewPanel<?>) p_view);
         v_frame.dispose();
      }
      else
      {
         throw new UnsupportedOperationException("Vue inconnue : " + p_view.getClass().getName());
      }
      // End of user code
   }

   @Override
   public void beforeClose ()
   {
      disposeWindow();
      super.beforeClose();
   }

   // Start of user code DetailPersonneViewSwing

   // End of user code

}
