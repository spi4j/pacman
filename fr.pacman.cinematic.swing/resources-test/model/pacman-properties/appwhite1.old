package = fr.appwhite1

idAppli = appli1

author = Pacman

# type de la base de données, parmi Oracle, H2, Mysql, Postgresql (plusieurs possibles, séparés par des virgules)
database.type = Oracle, H2

# type de client, pour l'instant uniquement SWING, GWT ou vide
client.type = SWING

server.sql.table.prefix = AW_
server.sql.table.additional_fields = server.sql.table.additional_field.xdmaj, server.sql.table.additional_field.xtopsup
server.sql.table.additional_field.xdmaj.name = XDMAJ
server.sql.table.additional_field.xdmaj.type = Date
#server.sql.table.additional_field.xdmaj.size = 15
#server.sql.table.additional_field.xdmaj.notnull = 1
server.sql.table.additional_field.xtopsup.name =  XTOPSUP
server.sql.table.additional_field.xtopsup.type =  Boolean
server.sql.table.additional_field.xtopsup.default =  0
server.sql.table.additional_field.xtopsup.notnull =  1

# Tablespace spécifique (si base Oracle)
server.sql.oracle.index.tablespace = 

# flag indiquant si la fetching strategy doit être générée dans l'application (générée par défaut)
# 0 / false = not generated
# 1 / true = generated
# default = true
fetchingstrategy.enabled = true

# flag indiquant si les annotations ejb doivent être générées dans l'application (générées par défaut)
# 0 / false = not generated
# 1 / true = generated
# default = true
ejbservice.enabled = true

# flag indiquant si le log4j.properties doit être généré dans l'application (généré par défaut)
log4j.enabled = true

# flag indiquant si les tests unitaires sur le crud doivent être générés (générés par défaut)
tests.crud.enabled = true

# niveau de base pour le découpage des exigences dans le code généré (0 : aucun découpage)
requirement.category.base.level = 0

###############################
# Exemple d'un projet découpé #
###############################

#client.swing.project = appwhite1-client
#client.swing.source.dir = src/main/java
#client.swing.test.dir = src/test/java

client.gwt.project = appwhite1-gwt
client.gwt.source.dir = src/main/java
client.gwt.resources.dir = src/main/resources
client.gwt.webapp.dir = src/main/webapp
client.gwt.test.dir = src/test/java

commons.project = appwhite1-commons
commons.source.dir = src/main/java
commons.test.dir = src/test/java
commons.test.resources.dir = src/test/resources

server.project = appwhite1-server
server.source.dir = src/main/java
server.resources.dir = src/main/resources
server.test.dir = src/test/java
server.sql.dir = src/main/sql
server.xmi.dir = src/main/xmi

################################
# Exemple d'un projet regroupé #
################################

#client.project = appwhite1
#client.source.dir = src/main/java
#client.test.dir = src/test/java

#commons.project = appwhite1
#commons.source.dir = src/main/java
#commons.test.dir = src/test/java

#server.project = appwhite1
#server.source.dir = src/main/java
#server.test.dir = src/test/java
#server.sql.dir = src/main/sql

#-------------------------------------------------------------
# Generated properties by Pacman Mon Apr 29 09:44:58 CEST 2013
# dossier de génération des sources du client Swing
client.swing.source.dir = src/main/java
# Le nom du package pour les composants PGE Swing
packagePgeSwing = client.ui.swing.widgets
# Le nom du package pour les composants PGE GWT
packagePgeGwt = client.ui.gwt.widgets

#-------------------------------------------------------------
# Generated properties by Pacman Tue Jul 02 14:57:30 CEST 2013
# Fichier de configuration des règles de validation
validation.config.file = validation.xml
# Initialisation du fichier de configuration en cas d'erreur de celui-ci
validation.init.on.error = true
# Délimiteur de ligne
new.line = \r\n

#-------------------------------------------------------------
# Generated properties by Pacman Thu Aug 01 18:14:24 CEST 2013
# Version initiale (cf. "set_versionImplem()") mise lors de la première génétration pour les tests de versionning d'exigence ("none" : exigence non implémentée ou "current" pour la version du modèle)
test.requirement.versionning.initial = none

#-------------------------------------------------------------
# Generated properties by Pacman Mon Aug 05 10:46:10 CEST 2013
# Le mode debug pour PacMan (plus d'informations en cas d'erreur de génération)
pacman.mode.isDebug = false

#-------------------------------------------------------------
# Generated properties by Pacman Wed Aug 07 15:54:35 CEST 2013
# 'true' : La génération de la couche de persistance (= Entity) se fait avec les méthodes de LazyLoading
entity.isLazyLoading = false

#-------------------------------------------------------------
# Generated properties by Pacman Mon Sep 02 14:27:49 CEST 2013
# Le nom du package pour la montée en charge
packageOverload = overload

#-------------------------------------------------------------
# Generated properties by Pacman Mon Sep 23 14:29:40 CEST 2013
# 'true' : La génération de la couche de persistance (= Entity) se fait avec les méthodes de LazyLoading
dsl.entity.isLazyLoading = false

#-------------------------------------------------------------
# Generated properties by Pacman Mon Oct 14 10:55:04 CEST 2013
# Utilisation des paramètres pour le user code des méthodes soa
deprecated.soa.usercode.params = true

#-------------------------------------------------------------
# Generated properties by Pacman Fri May 16 15:58:27 CEST 2014
# flag indiquant si les service requirements doivent être générés dans l'application (générés par défaut)
servicerequirements.enabled = true

#-------------------------------------------------------------
# Generated properties by Pacman Tue Jan 13 11:14:23 CET 2015
# projet Eclipse du client SWING
client.swing.project = myproject-client-swing

#-------------------------------------------------------------
# Generated properties by Pacman Wed Feb 03 12:39:40 CET 2016
# projet Eclipse du client JSF
client.jsf.project = myproject-client-jsf
# dossier de génération des sources du client JSF
client.jsf.source.dir = src/main/java
# dossier de génération des ressources du client JSF
client.jsf.resources.dir = src/main/resources
# dossier de génération de la webapp du client JSF
client.jsf.webapp.dir = src/main/webapp

#-------------------------------------------------------------
# Generated properties by Pacman Tue Mar 01 09:58:59 CET 2016
# flag pour la génération de la couche Matching et les objets DTO
matching.layer.enabled = true

#-------------------------------------------------------------
# Generated properties by Pacman Wed Feb 08 15:43:46 CET 2017
# projet Eclipse de la partie Integration pour un cilent swing
client.integration.project = myproject-integration
# flag indiquant si une application des gestion des entités (crud) doit être générée (non générée par défaut)
application.crud.enabled = false
# flag indiquant si les tests de comportement (JBehave) doivent être générés (non générés par défaut)
tests.bdd.enabled = false
# L'interface ancetre des services avec CRUD (Sans la couche Matching)
framework.type.entity.Service_Itf = fr.spi4j.entity.Service_Itf
# La classe ancetre des services avec CRUD (Sans la couche Matching)
framework.type.Entity.Service_Abs = fr.spi4j.entity.Service_Abs
# L'interface des Mappers (conversion Entity <-> XTO)
framework.type.EntityMapper_Itf = fr.spi4j.mapper.EntityMapper_Itf
# La classe ancetre des Mappers (conversion Entity <-> XTO)
framework.type.EntityMapper_Abs = fr.spi4j.mapper.EntityMapper_Abs
# La classe ancetre des testeurs de FetchingStrategy
framework.type.FetchingStrategyEntityTester_Abs = fr.spi4j.tua.FetchingStrategyEntityTester_Abs
